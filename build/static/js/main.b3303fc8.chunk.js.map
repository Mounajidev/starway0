{"version":3,"sources":["config/web3/artifacts/MounajiTestContract.js","hooks/useMounajiTestContract/index.js","views/home/index.js","components/request-access/index.js","config/web3/artifacts/MounajiTestSwapContract.js","hooks/useMounajiTestSwap/index.js","views/swaptokens/index.js","views/roadmap/index.js","views/ecosystem/index.js","views/whitepaper/index.js","layouts/main/nav-link/index.js","layouts/main/footer/index.js","config/web3/index.js","hooks/useTruncatedAddress/index.js","layouts/main/wallet-data/index.js","layouts/main/index.js","views/playWebGL/playwebgl.js","App.js","index.js"],"names":["MounajiTestArtifact","address","abi","useMounajiTestContract","useWeb3React","active","library","chainId","useMemo","eth","Contract","Home","useState","account","mounajiTestContract","getMounajiTestContractData","useToast","useCallback","a","methods","totalSupply","call","balanceOf","useEffect","marginTop","maxW","borderWidth","borderRadius","overflow","position","src","RequestAccess","status","mr","right","top","MounajiTestSwapArtifact","useMounajiTestSwap","SwapTokens","isBuying","setIsBuying","mounajiTestSwap","setTotalSupply","getBalance","setBalance","React","inputValue","setInputValue","console","log","toast","align","spacing","base","md","py","direction","flex","lineHeight","fontWeight","fontSize","sm","lg","as","_after","content","width","height","bottom","left","bg","zIndex","color","value","type","allowMouseWheel","defaultValue","min","onChange","rounded","size","px","colorScheme","_hover","disabled","onClick","buyTokens","send","from","on","txHash","tittle","description","error","message","isLoading","to","justify","w","mt","ml","Roadmap","imageSrc","backgroundImage","image","pos","backgroundRepeat","backgroundSize","margin","h","Ecosystem","Whitepaper","NavLink","children","props","Link","textDecoration","useColorModeValue","Footer","borderTopWidth","borderStyle","borderColor","Stack","Date","getFullYear","href","connector","InjectedConnector","supportedChainIds","useTruncatedAddress","substr","WalletData","balance","activate","deactivate","isUnsupportedChain","UnsupportedChainIdError","connect","localStorage","setItem","toSet","toFixed","getItem","truncatedAddress","alignItems","d","variant","removeItem","leftIcon","Links","name","MainLayout","useDisclosure","isOpen","onOpen","onClose","minH","mx","borderBottom","justifyContent","icon","display","map","pb","p","PlayWebGL","unityContent","UnityContent","progression","params","App","path","exact","element","ReactDOM","render","StrictMode","getLibrary","provider","Web3","document","getElementById"],"mappings":"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","file":"static/js/main.b3303fc8.chunk.js","sourcesContent":["\r\nconst   MounajiTestArtifact = {\r\n    address: {\r\n        3: \"0xdb84645D258babC6fC5937d3269e8F8c3bA315ad\"\r\n        // 97: \"\",\r\n\r\n    },\r\n    abi: \r\n    [\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"spender\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"spender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"allowance\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"spender\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"decimals\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint8\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint8\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"spender\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"subtractedValue\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"decreaseAllowance\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"spender\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"addedValue\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"increaseAllowance\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"mint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"totalSupply\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"recipient\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transfer\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"recipient\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MounajiTestArtifact;","import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestArtifact from '../../config/web3/artifacts/MounajiTestContract';\r\n\r\nconst { address, abi } = MounajiTestArtifact;\r\n\r\nconst    useMounajiTestContract = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestContract = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestContract;\r\n};\r\n\r\nexport default useMounajiTestContract;","import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  AspectRatio,\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [isMinting, setIsMinting] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const { active, account } = useWeb3React();\r\n  const mounajiTestContract = useMounajiTestContract();\r\n  const toast = useToast();\r\n  \r\n  const getMounajiTestContractData = useCallback(async () => {\r\n    if (mounajiTestContract) {\r\n      const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n      const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n      //   .deterministicPseudoRandomDNA(totalSupply, account)\r\n      //   .call();\r\n      // const image = await mounajiTestContract.methods.imageByDNA(dnaPreview).call();\r\n      // setImageSrc(image);\r\n    }\r\n  }, [mounajiTestContract, account]);\r\n\r\n  useEffect(() => {\r\n    getMounajiTestContractData();\r\n  }, [getMounajiTestContractData]);\r\n\r\n  const mint = () => {\r\n    setIsMinting(true);\r\n\r\nmounajiTestContract.methods.mint(account, 1000000).send({\r\n\r\n\r\n  from: account,\r\n  value: 1e18\r\n\r\n})\r\n.on('transactionHash', (txHash) => {\r\n  setIsMinting(false);\r\n   toast({\r\n     title: 'transaccion enviada',\r\n     description: 'txHash',\r\n     status: 'info'\r\n   })\r\n\r\n})\r\n.on('receipt',() => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion confirmada !',\r\n    description: 'Enjoy playing Starway !',\r\n    status: 'success'\r\n\r\n  })\r\n\r\n})\r\n.on('error', (error) => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion fallida',\r\n    description: error.message,\r\n    status: 'error',\r\n  })\r\n\r\n})\r\n  }\r\n  return (\r\n    <Box marginTop={'50px'}>\r\n      <h1>Starway</h1>\r\n     \r\n      <Image \r\n   maxW='700px' borderWidth='1px' borderRadius='lg' overflow='scroll' position='center'\r\n   marginTop={\"-200px\"}\r\n   src={\"/images/starway.png\"}/>\r\n   \r\n    </Box>\r\n    \r\n//   <Box\r\n//   maxW='fixed' borderWidth='1px' borderRadius='lg'\r\n  \r\n//   backgroundcolor='blue'\r\n  \r\n//   pos={\"absolute\"}\r\n//   align={\"center\"}\r\n//   justify={\"center\"}\r\n//   backgroundRepeat={\"no-repeat\"}\r\n//   backgroundSize={\"cover\"}\r\n//   margin={\"0\"}\r\n//   top={\"55px\" }\r\n//   left={\"0\"}\r\n//   w={\"100%\"}\r\n//   h={\"100%\"}\r\n// >\r\n// <Image \r\n//   maxW='700px' borderWidth='1px' borderRadius='lg' overflow='scroll' position='top'\r\n//   marginTop={\"-200px\"}\r\n//   src={\"../images/starway.png\"}\r\n  \r\n  \r\n  \r\n  \r\n// />\r\n\r\n// <Stack\r\n      \r\n//       align={\"center\"}\r\n//       spacing={{ base: 8, md: 10 }}\r\n//        py={{ base: -20, md: -20 }}\r\n//       direction={{ base: \"column-reverse\", md: \"row\" }}\r\n      \r\n//     >\r\n      \r\n        \r\n      \r\n   \r\n//       <Stack flex={1} spacing={{ base: 5, md: 10 }} marginTop={'250px'}>\r\n        \r\n      \r\n//         <AspectRatio maxW='500px' ratio={1}   >\r\n//   <iframe\r\n//     title='naruto'\r\n//     pos={'absolute'}\r\n//     width={'100px'}\r\n//     src='https://www.youtube.com/embed/ES6SQhlEXfI'\r\n//     allowFullScreen\r\n    \r\n//   />\r\n// </AspectRatio>\r\n\r\n       \r\n//         <Text color={\"gray.500\"}>\r\n//           Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n//         </Text>\r\n//         <Text color={\"green.500\"}>\r\n//           Get your Stars and start ean for playing now !\r\n//         </Text>\r\n//         <Stack\r\n//           spacing={{ base: 4, sm: 6 }}\r\n//           direction={{ base: \"column\", sm: \"row\" }}\r\n//         >\r\n//           <Button\r\n//             rounded={\"full\"}\r\n//             size={\"lg\"}\r\n//             fontWeight={\"normal\"}\r\n//             px={6}\r\n//             colorScheme={\"green\"}\r\n//             bg={\"green.400\"}\r\n//             _hover={{ bg: \"green.500\" }}\r\n//             disabled={!mounajiTestContract}\r\n//             onClick={mint}\r\n//             isLoading= {isMinting}\r\n//           >\r\n//             Get your Star Token !\r\n//           </Button>\r\n//           <Link to=\"/swaptokens\">\r\n//             <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n//               SwapTokens\r\n//             </Button>\r\n//           </Link>\r\n//         </Stack>\r\n//       </Stack>\r\n//       <Flex\r\n//         flex={1}\r\n//         direction=\"column\"\r\n//         justify={\"center\"}\r\n//         align={\"center\"}\r\n//         position={\"relative\"}\r\n//         w={\"full\"}\r\n//       >\r\n//         <Image \r\n//         src={active ? imageSrc : \"../../images/starway.png\"} />\r\n//         {active ? (\r\n//           <>\r\n            \r\n//           </>\r\n//         ) : (\r\n//           <Badge mt={2}>Wallet desconectado</Badge>\r\n//         )}\r\n//       </Flex>\r\n//     </Stack>\r\n//     </Box>  \r\n      \r\n    \r\n   );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useWeb3React } from '@web3-react/core';\r\n// import { useCallback, useEffect, useState } from 'react';\r\n// import useMounajiTestContract from '../../hooks/useMounajiTestContract';\r\n\r\n// const Home = () => {\r\n//   const { active }  = useWeb3React(); \r\n//   const [totalSupply, setTotalSupply] = useState();\r\n\r\n//   const mounajiTestContract = useMounajiTestContract();\r\n\r\n//   const getTotalSupply = useCallback(async () => {\r\n//     if(mounajiTestContract){\r\n//       const result = await mounajiTestContract.methods.totalSupply().call();\r\n//       setTotalSupply(result);\r\n//     }\r\n\r\n//   }, [mounajiTestContract])\r\n\r\n//   useEffect (() => {\r\n//       getTotalSupply();\r\n//   }, [getTotalSupply]);\r\n\r\n//   if (!active) return \"Connect your wallet\"\r\n\r\n//   return (\r\n//     <>\r\n//       <p>Max supply:{totalSupply} </p>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","import {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst RequestAccess = () => {\r\n  return (\r\n    <Alert status=\"error\">\r\n      <AlertIcon />\r\n      <AlertTitle mr={2}>Conecta tu wallet</AlertTitle>\r\n      <AlertDescription>para acceder a la app</AlertDescription>\r\n      <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default RequestAccess;\r\n","\r\nconst MounajiTestSwapArtifact = {\r\n    address: {\r\n        3: \"0xDb3EA32692E18ed5c8144D767B34E63Bc8aF7B8B\"\r\n        // 97: \"\",\r\n\r\n    },\r\n    abi: [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"buyer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountOfETH\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountOfTokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"BuyTokens\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"seller\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountOfTokens\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amountOfETH\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"SellTokens\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"buyTokens\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenAmount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenAmountToSell\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"sellTokens\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"tokensPerEth\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"withdraw\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n};\r\n\r\nexport default MounajiTestSwapArtifact;","import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestSwapArtifact from '../../config/web3/artifacts/MounajiTestSwapContract';\r\n\r\nconst { address, abi } = MounajiTestSwapArtifact;\r\n\r\nconst    useMounajiTestSwap = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestSwap = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestSwap;\r\n};\r\n\r\nexport default useMounajiTestSwap;","import { useWeb3React } from '@web3-react/core';\r\nimport React from 'react';\r\nimport { useCallback, useEffect, useState } from \"react\"; \r\nimport PunkCard from '../../components/punk-card';\r\nimport Loading from '../../components/loading';\r\nimport RequestAccess from '../../components/request-access';\r\nimport useMounajiTestSwap from '../../hooks/useMounajiTestSwap';\r\nimport useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n    Stack,\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Button,\r\n    Image,\r\n    Badge,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n  import { Link } from \"react-router-dom\";\r\n    \r\n\r\nconst SwapTokens = () => {\r\n\r\n  const { active, account } = useWeb3React();\r\n  const [isBuying, setIsBuying] = useState(false); \r\n    const  mounajiTestSwap  = useMounajiTestSwap();\r\n    const mounajiTestContract = useMounajiTestContract();\r\n    const [totalSupply, setTotalSupply] = useState();\r\n    const [getBalance, setBalance] = useState();\r\n    const [inputValue, setInputValue] = React.useState();\r\n\r\n    const handleChange = (inputValue) => setInputValue(inputValue)\r\nconsole.log (inputValue)\r\n    \r\n    \r\n    // state = {tokenAmount};\r\n\r\n    // const updateTokenAmount = (event) =>{\r\n      \r\n\r\n    //   setInputValue( event.target.value);\r\n        \r\n    // };\r\n     \r\n\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    \r\n    const toast = useToast();\r\n    \r\n    \r\n\r\n    const getMounajiTestContractData = useCallback(async () => {\r\n        if (mounajiTestContract) {\r\n          const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n          setTotalSupply(totalSupply/ 1e18);\r\n\r\n          const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n          setBalance(getBalance/ 1e18);\r\n          \r\n        }\r\n      }, [mounajiTestContract, account]);\r\n\r\n      \r\n      useEffect(() => {\r\n        getMounajiTestContractData();\r\n      }, [getMounajiTestContractData]);\r\n\r\n\r\n      const buy = () => {\r\n        setIsBuying(true);\r\n              \r\n          mounajiTestSwap.methods\r\n          .buyTokens()\r\n          .send({\r\n            from: account,\r\n            value: (inputValue * 1e18 ) / 100,\r\n\r\n          })\r\n          .on('transactionHash', (txHash) => {\r\n            toast({\r\n              tittle:'Transaccion enviada',\r\n              description: txHash,\r\n              status: 'info'\r\n            })\r\n            \r\n          })\r\n          .on('receipt', () => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Purchase succefull !',\r\n              description: 'Enjoy playing Starway!',\r\n              status: 'success'\r\n            })\r\n             \r\n\r\n          })\r\n          .on('error', (error) => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Ops, Transaccion failed',\r\n              description: error.message,\r\n              status: 'error'\r\n            })\r\n\r\n          })\r\n\r\n        //  inputValue(setInputValue);\r\n\r\n    };\r\n\r\n    // console.log( JSON.stringify(mounajiTestSwap) )\r\n       \r\n    if (!active) return <RequestAccess />;\r\n    \r\n    return (\r\n        \r\n            <Stack\r\n              align={\"center\"}\r\n              spacing={{ base: 8, md: 10 }}\r\n              py={{ base: 20, md: 28 }}\r\n              direction={{ base: \"column-reverse\", md: \"row\" }}\r\n            >\r\n              <Stack flex={1} spacing={{ base: 10, md: 10 }}>\r\n                <Heading\r\n                  lineHeight={1.1}\r\n                  fontWeight={600}\r\n                  fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n                >\r\n                  <Text\r\n                    as={\"span\"}\r\n                    position={\"relative\"}\r\n                    \r\n                    _after={{\r\n                      content: \"''\",\r\n                      width: \"full\",\r\n                      height: \"30%\",\r\n                      position: \"absolute\",\r\n                      bottom: 1,\r\n                      left: 0,\r\n                      bg: \"green.400\",\r\n                      zIndex: -1,\r\n                    }}\r\n                  >\r\n                    Token Exchange\r\n                  </Text>\r\n                  <br />\r\n                  <Text as={\"span\"} color={\"blue.400\"}>\r\n                    Get your Star Tokens !\r\n                  </Text>\r\n                </Heading>\r\n                <Text color={\"gray.500\"}>\r\n                  Total Supply of Start Tokens: {totalSupply} \r\n                </Text>\r\n                <Text color={\"gray.500\"}>\r\n                  Stars Tokens you own : {getBalance} \r\n                </Text>\r\n                <Text color={\"green.900\"}>\r\n                  Get your Stars and start ean for playing now !\r\n                </Text>\r\n                <Stack\r\n                  spacing={{ base: 4, sm: 6 }}\r\n                  direction={{ base: \"column\", sm: \"row\" }}\r\n                >\r\n                          <NumberInput value={inputValue} type='number' allowMouseWheel defaultValue={0} min={0}\r\n                          onChange= {handleChange}\r\n                          \r\n                           >\r\n      <NumberInputField />\r\n     \r\n    </NumberInput>\r\n                  <Button\r\n                    rounded={\"full\"}\r\n                    size={\"lg\"}\r\n                    fontWeight={\"normal\"}\r\n                    px={20}\r\n                    colorScheme={\"green\"}\r\n                    bg={\"green.400\"}\r\n                    _hover={{ bg: \"green.500\" }}\r\n                    disabled={!mounajiTestContract}\r\n                    onClick={buy}\r\n                    isLoading= {isBuying}\r\n\r\n                  >\r\n                    Buy Stars Tokens\r\n                  </Button>\r\n                 \r\n          \r\n                  <Link to=\"/swaptokens\">\r\n                    <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n                      SwapTokens\r\n                    </Button>\r\n                  </Link>\r\n                </Stack>\r\n              </Stack>\r\n              <Flex\r\n                flex={1}\r\n                direction=\"column\"\r\n                justify={\"center\"}\r\n                align={\"center\"}\r\n                position={\"relative\"}\r\n                w={\"full\"}\r\n              >\r\n                \r\n                {active ? (\r\n                  <>\r\n                    <Flex mt={2}>\r\n                      <Badge>\r\n                        Next ID:\r\n                        <Badge ml={1} colorScheme=\"green\">\r\n                          1\r\n                        </Badge>\r\n                      </Badge>\r\n                    \r\n                       \r\n                     \r\n                    </Flex>\r\n                    <Button\r\n                      onClick={getMounajiTestContractData}\r\n                      mt={4}\r\n                      size=\"xs\"\r\n                      colorScheme=\"green\"\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Badge mt={2}>Wallet desconectado</Badge>\r\n                )}\r\n              </Flex>\r\n            </Stack>\r\n          );\r\n        };\r\n        \r\n        \r\n        \r\n        <p>Get your Start Tokens !</p>\r\n        \r\n        \r\n    \r\n\r\n\r\nexport default SwapTokens;","import { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Roadmap = () => {\r\n \r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const { active, account } = useWeb3React();\r\n  \r\n  const toast = useToast();\r\n  \r\n\r\n\r\n  \r\n  return (\r\n  <Box\r\n  maxW='fixed' borderWidth='1px' borderRadius='lg'\r\n  backgroundImage=\"'/images/fondoespacio.png'\"\r\n  image=\"./images.starway.png\"\r\n  pos={\"absolute\"}\r\n  align={\"center\"}\r\n  justify={\"center\"}\r\n  backgroundRepeat={\"no-repeat\"}\r\n  backgroundSize={\"cover\"}\r\n  margin={\"0\"}\r\n  top={\"55px\" }\r\n  left={\"0\"}\r\n  w={\"100%\"}\r\n  h={\"100%\"}\r\n>\r\n<Stack\r\n\r\nwidth={'500px'}\r\nheight={'500px'}\r\nmarginTop={'10px  '}\r\n\r\n>\r\n<Image \r\n  // maxW='' borderWidth='1px' borderRadius='lg'\r\n  position='relative'\r\n  align={'center'}\r\n  \r\n  backgroundSize={'cover'}\r\n  \r\n  src={\"/images/starway.png\"}\r\n  \r\n  \r\n  \r\n/>\r\n</Stack>\r\n  \r\n<Stack\r\n      \r\n      align={\"center\"}\r\n      spacing={{ base: 8, md: 10 }}\r\n       py={{ base: -920, md: -920 }}\r\n      direction={{ base: \"column-reverse\", md: \"row\" }}\r\n    >\r\n      <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n        <Heading\r\n          lineHeight={1.1}\r\n          fontWeight={600}\r\n          fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n        >\r\n        \r\n        </Heading>\r\n        <Text color={\"gray.500\"}>\r\n          Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n        </Text>\r\n        <Text color={\"green.500\"}>\r\n          Get your Stars and start ean for playing now !\r\n        </Text>\r\n        <Stack\r\n          spacing={{ base: 4, sm: 6 }}\r\n          direction={{ base: \"column\", sm: \"row\" }}\r\n        >\r\n          <Button\r\n            rounded={\"full\"}\r\n            size={\"lg\"}\r\n            fontWeight={\"normal\"}\r\n            px={6}\r\n            colorScheme={\"green\"}\r\n            bg={\"green.400\"}\r\n            _hover={{ bg: \"green.500\" }}\r\n            \r\n            \r\n          >\r\n            Get your Star Token !\r\n          </Button>\r\n          <Link to=\"/swaptokens\">\r\n            <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n              SwapTokens\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      <Flex\r\n        flex={1}\r\n        direction=\"column\"\r\n        justify={\"center\"}\r\n        align={\"center\"}\r\n        position={\"relative\"}\r\n        w={\"full\"}\r\n      >\r\n        <Image \r\n        src={active ? imageSrc : \"../../images/starway.png\"} />\r\n        {active ? (\r\n          <>\r\n            \r\n          </>\r\n        ) : (\r\n          <Badge mt={2}>Wallet desconectado</Badge>\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n    </Box>  \r\n      \r\n    \r\n  );\r\n};\r\n\r\nexport default Roadmap;","import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Ecosystem = () => {\r\n  const [isMinting, setIsMinting] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const { active, account } = useWeb3React();\r\n  const mounajiTestContract = useMounajiTestContract();\r\n  const toast = useToast();\r\n  \r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n  <Box\r\n  maxW='fixed' borderWidth='1px' borderRadius='lg'\r\n  backgroundImage=\"'/images/fondoespacio.png'\"\r\n  image=\"./images.starway.png\"\r\n  pos={\"absolute\"}\r\n  align={\"center\"}\r\n  justify={\"center\"}\r\n  backgroundRepeat={\"no-repeat\"}\r\n  backgroundSize={\"cover\"}\r\n  margin={\"0\"}\r\n  top={\"55px\" }\r\n  left={\"0\"}\r\n  w={\"100%\"}\r\n  h={\"100%\"}\r\n>\r\n<Image \r\n  maxW='700px' borderWidth='1px' borderRadius='lg' overflow='scroll'\r\n  marginTop={\"-200px\"}\r\n  src={\"/images/starway.png\"}\r\n  \r\n  \r\n  \r\n/>\r\n\r\n  \r\n<Stack\r\n      \r\n      align={\"center\"}\r\n      spacing={{ base: 8, md: 10 }}\r\n       py={{ base: -920, md: -920 }}\r\n      direction={{ base: \"column-reverse\", md: \"row\" }}\r\n    >\r\n\r\n      <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n        <Heading\r\n          lineHeight={1.1}\r\n          fontWeight={600}\r\n          fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n        >\r\n        \r\n        </Heading>\r\n        <Text color={\"gray.500\"}>\r\n          Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n\r\n        </Text>\r\n        <Text color={\"green.500\"}>\r\n          Get your Stars and start ean for playing now !\r\n        </Text>\r\n        <Stack\r\n          spacing={{ base: 4, sm: 6 }}\r\n          direction={{ base: \"column\", sm: \"row\" }}\r\n        >\r\n          <Button\r\n            rounded={\"full\"}\r\n            size={\"lg\"}\r\n            fontWeight={\"normal\"}\r\n            px={6}\r\n            colorScheme={\"green\"}\r\n            bg={\"green.400\"}\r\n            _hover={{ bg: \"green.500\" }}\r\n            disabled={!mounajiTestContract}\r\n            \r\n          >\r\n            Get your Star Token !\r\n          </Button>\r\n          <Link to=\"/swaptokens\">\r\n            <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n              SwapTokens\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      <Flex\r\n        flex={1}\r\n        direction=\"column\"\r\n        justify={\"center\"}\r\n        align={\"center\"}\r\n        position={\"relative\"}\r\n        w={\"full\"}\r\n      >\r\n        <Image \r\n        src={active ? imageSrc : \"../../images/starway.png\"} />\r\n        {active ? (\r\n          <>\r\n            \r\n          </>\r\n        ) : (\r\n          <Badge mt={2}>Wallet desconectado</Badge>\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n    </Box>  \r\n      \r\n    \r\n  );\r\n};\r\n\r\nexport default Ecosystem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Whitepaper = () => {\r\n    \r\n    const [isMinting, setIsMinting] = useState(false);\r\n    const [imageSrc, setImageSrc] = useState(\"\");\r\n    const { active, account } = useWeb3React();\r\n    const mounajiTestContract = useMounajiTestContract();\r\n    const toast = useToast();\r\n    \r\n  \r\n  \r\n    \r\n    return (\r\n      <Box>\r\n        <h1>Whitepaper</h1>\r\n      </Box>\r\n    );\r\n    \r\n};\r\n\r\n\r\n\r\n\r\nexport default Whitepaper;","import { Link as DefaultLink, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavLink = ({ children, ...props }) => (\r\n  <DefaultLink\r\n  \r\n    px={2}\r\n    py={1}\r\n    as={Link}\r\n    rounded={\"md\"}\r\n    _hover={{\r\n      textDecoration: \"none\",\r\n      bg: useColorModeValue(\"gray.200\", \"gray.700\"),\r\n    }}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </DefaultLink>\r\n);\r\n\r\nexport default NavLink;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box\r\n      bg={useColorModeValue(\"white\", \"gray.800\")}\r\n      color={useColorModeValue(\"gray.700\", \"gray.200\")}\r\n    >\r\n      <Box\r\n        borderTopWidth={1}\r\n        borderStyle={\"solid\"}\r\n        borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n      >\r\n        <Container\r\n          as={Stack}\r\n          maxW={\"6xl\"}\r\n          py={4}\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n          spacing={4}\r\n          justify={{ base: \"center\", md: \"space-between\" }}\r\n          align={{ base: \"center\", md: \"center\" }}\r\n        >\r\n          <Text>\r\n            © {new Date().getFullYear()} Original designs by\r\n            <Link ml={1} href=\"https://twitter.com/pablostanley\">\r\n              Pablo Stanley 🎨\r\n            </Link>\r\n          </Text>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Web3 from \"web3\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\nconst connector = new InjectedConnector({\r\n  supportedChainIds: [\r\n    3, // Ropsten\r\n    // 97, // Smart Chain - Tesnet\r\n    // 56, // Binance Smart Chain\r\n  ],\r\n});\r\n\r\nconst getLibrary = (provider) => {\r\n  return new Web3(provider);\r\n};\r\n\r\nexport { connector, getLibrary };\r\n","import { useMemo } from \"react\";\r\n\r\nconst useTruncatedAddress = (account) => {\r\n  const truncated = useMemo(\r\n    () => `${account?.substr(0, 6)}...${account?.substr(-4)}`,\r\n    [account]\r\n  );\r\n\r\n  return truncated;\r\n};\r\n\r\nexport default useTruncatedAddress;\r\n","import {\r\n  Flex,\r\n  Button,\r\n  Tag,\r\n  TagLabel,\r\n  Badge,\r\n  TagCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { connector } from \"../../../config/web3\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useTruncatedAddress from \"../../../hooks/useTruncatedAddress\";\r\n\r\nconst WalletData = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  const { active, activate, deactivate, account, error, library } =\r\n    useWeb3React();\r\n\r\n  const isUnsupportedChain = error instanceof UnsupportedChainIdError;\r\n\r\n  const connect = useCallback(() => {\r\n    activate(connector);\r\n    localStorage.setItem(\"previouslyConnected\", \"true\");\r\n  }, [activate]);\r\n\r\n  const disconnect = () => {\r\n    deactivate();\r\n    localStorage.removeItem(\"previouslyConnected\");\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    const toSet = await library.eth.getBalance(account);\r\n    setBalance((toSet / 1e18).toFixed(2));\r\n  }, [library?.eth, account]);\r\n\r\n  useEffect(() => {\r\n    if (active) getBalance();\r\n  }, [active, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"previouslyConnected\") === \"true\") connect();\r\n  }, [connect]);\r\n\r\n  const truncatedAddress = useTruncatedAddress(account);\r\n\r\n  return (\r\n    <Flex alignItems={\"center\"}>\r\n      {active ? (\r\n        <Tag colorScheme=\"green\" borderRadius=\"full\">\r\n          <TagLabel>\r\n            <Link to=\"/swaptokens\">{truncatedAddress}</Link>\r\n          </TagLabel>\r\n          <Badge\r\n            d={{\r\n              base: \"none\",\r\n              md: \"block\",\r\n            }}\r\n            variant=\"solid\"\r\n            fontSize=\"0.8rem\"\r\n            ml={1}\r\n          >\r\n            ~{balance} Ξ\r\n          </Badge>\r\n          <TagCloseButton onClick={disconnect} />\r\n        </Tag>\r\n      ) : (\r\n        <Button\r\n          variant={\"solid\"}\r\n          colorScheme={\"green\"}\r\n          size={\"sm\"}\r\n          leftIcon={<AddIcon />}\r\n          onClick={connect}\r\n          disabled={isUnsupportedChain}\r\n        >\r\n          {isUnsupportedChain ? \"Red no soportada\" : \"Conectar wallet\"}\r\n        </Button>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default WalletData;\r\n","import {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  IconButton,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  Image,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\r\nimport NavLink from \"./nav-link\";\r\nimport Footer from \"./footer\";\r\nimport WalletData from \"./wallet-data\";\r\n\r\nconst Links = [\r\n  {\r\n    name: \"Home\",\r\n    to: \"/\",\r\n  },\r\n  {\r\n    name: \"SwapTokens\",\r\n    to: \"/swaptokens\",\r\n  },\r\n  {\r\n    name: \"Ecosystem\",\r\n    to: \"/ecosystem\",\r\n  },\r\n  {\r\n    name: \"Roadmap\",\r\n    to: \"/roadmap\",\r\n      },\r\n  \r\n  {\r\n    name: \"Whitepaper\",\r\n    to: \"/whitepaper\",\r\n  },\r\n\r\n\r\n  {\r\n    name: \"PlayWebGL\",\r\n    to: \"/playwebgl\",\r\n  },\r\n\r\n];\r\n\r\nconst MainLayout = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Flex minH=\"100vh\" direction=\"column\">\r\n      <Box\r\n        mx=\"auto\"\r\n        maxW={\"7xl\"}\r\n        width=\"100%\"\r\n        bg={useColorModeValue(\"white\", \"gray.800\")}\r\n        px={4}\r\n      >\r\n         \r\n        <Flex\r\n          bg={useColorModeValue(\"white\", \"gray.800\")}\r\n          color={useColorModeValue(\"gray.600\", \"white\")}\r\n          minH={\"60px\"}\r\n\r\n\r\n          py={{ base: 0 }}\r\n          px={{ base: 0 }}\r\n\r\n          borderBottom={1}\r\n          borderStyle={\"solid\"}\r\n          borderColor={useColorModeValue(\"blue.200\", \"blue.900\")}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <IconButton\r\n            size={\"sm\"}\r\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n            aria-label={\"Open Menu\"}\r\n            display={{ md: \"none\" }}\r\n            onClick={isOpen ? onClose : onOpen}\r\n          />\r\n\r\n\r\n          <HStack spacing={8} alignItems={\"center\"}>\r\n            <Flex alignItems=\"center\">\r\n              <Image src=\"./images/platzi.svg\" width=\"80px\" />\r\n              <Heading size=\"md\" color=\"purple\" mt={0.2} ml={1}>\r\n                Swarway\r\n              </Heading>\r\n            </Flex>\r\n</HStack>\r\n         \r\n          <HStack spacing={0} alignItems={\"left\"} >\r\n\r\n            \r\n            <HStack\r\n              as={\"nav\"}\r\n              spacing={4}\r\n              display={{ base: \"none\", md: \"flex\" }}\r\n            >\r\n              {Links.map(({ name, to }) => (\r\n                <NavLink key={name} to={to}>\r\n                  {name}\r\n                </NavLink>\r\n              ))}\r\n            </HStack>\r\n          </HStack>\r\n          <WalletData />\r\n        </Flex>\r\n\r\n        {isOpen ? (\r\n          <Box pb={4} display={{ md: \"none\" }}  >\r\n            <Stack as={\"nav\"} spacing={4}>\r\n              {Links.map(({ name, to }) => (\r\n                <NavLink key={name} to={to}>\r\n                  {name}\r\n                </NavLink>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n      <Box mx=\"auto\" flex={1} p={4} maxW={\"7xl\"} width=\"100%\">\r\n        {children}\r\n      </Box>\r\n      <Footer />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Unity, { UnityContent, UnityContext } from \"react-unity-webgl\";\r\n\r\n\r\n\r\nconst PlayWebGL = () => {\r\n    \r\n    const [isMinting, setIsMinting] = useState(false);\r\n    const [imageSrc, setImageSrc] = useState(\"\");\r\n    const { active, account } = useWeb3React();\r\n    const mounajiTestContract = useMounajiTestContract();\r\n    const toast = useToast();\r\n\r\n    const unityContent = new UnityContent(\r\n      './Build/WebGL.json',\r\n      './Build/UnityLoader.js'\r\n    )\r\n    unityContent.on(\"quitted\", () => {\r\n      console.log('Game quit')\r\n    })\r\n    unityContent.on(\"loaded\", () => {\r\n      console.log('Game loaded')\r\n    })\r\n    unityContent.on(\"progress\", progression => {\r\n      console.log('Game loading', progression)\r\n    })\r\n    unityContent.on(\"error\", message => {\r\n      console.log('Game errored', message)\r\n    })\r\n    unityContent.on(\"DemoUnityToReact\", (params) => {\r\n      console.log('DemoUnityToReact', params)\r\n    })\r\n         \r\n    \r\n    return (\r\n        \r\n    <Box\r\n    maxW='fixed' borderWidth='1px' borderRadius='lg'\r\n    // backgroundImage=\"'/images/fondoespacio.png'\"\r\n    image=\"./images.starway.png\"\r\n    pos={\"absolute\"}\r\n    align={\"center\"}\r\n    justify={\"center\"}\r\n    backgroundRepeat={\"no-repeat\"}\r\n    backgroundSize={\"cover\"}\r\n    margin={\"0\"}\r\n    top={\"55px\" }\r\n    left={\"0\"}\r\n    w={\"100%\"}\r\n    h={\"100%\"}\r\n    \r\n  >\r\n    <Stack marginTop={'20px'}>\r\n      \r\n    <h1>Play Starway from the web browser !</h1>\r\n    </Stack>\r\n\r\n    <Unity unityContent={unityContent} width=\"100%\" height=\"100%\" />  \r\n      \r\n    \r\n       </Box>  \r\n        \r\n      \r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default PlayWebGL;","import { Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./views/home\";\r\nimport SwapTokens from \"./views/swaptokens\";\r\nimport Roadmap from \"./views/roadmap\";\r\nimport Ecosystem from \"./views/ecosystem\";\r\nimport Whitepaper from \"./views/whitepaper\";\r\nimport MainLayout from './layouts/main';\r\nimport PlayWebGL from \"./views/playWebGL/playwebgl\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <MainLayout>\r\n      <Routes>\r\n      <Route path=\"/\" exact element={<Home/>} />\r\n      <Route path=\"/swaptokens\" exact element={<SwapTokens/>} />\r\n      <Route path=\"/roadmap\" exact element={<Roadmap/>} />\r\n      <Route path=\"/ecosystem\" exact element={<Ecosystem/>} />\r\n      <Route path=\"/whitepaper\" exact element={<Whitepaper/>} />\r\n      <Route path=\"/playwebgl\" exact element={<PlayWebGL/>} />\r\n      </Routes>\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport { getLibrary } from \"./config/web3\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <ChakraProvider>\r\n        <Web3ReactProvider getLibrary={getLibrary}>\r\n          <App />\r\n        </Web3ReactProvider>\r\n      </ChakraProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}