{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport MounajiTestSwapArtifact from '../../config/web3/artifacts/MounajiTestSwapContract';\nconst {\n  address,\n  abi\n} = MounajiTestSwapArtifact;\n\nconst useMounajiTestSwap = () => {\n  _s();\n\n  var _library$eth;\n\n  const {\n    active,\n    library,\n    chainId\n  } = useWeb3React();\n  const mounajiTestSwap = useMemo(() => {\n    if (active) return new library.eth.Contract(abi, address[chainId]);\n  }, [active, chainId, library === null || library === void 0 ? void 0 : (_library$eth = library.eth) === null || _library$eth === void 0 ? void 0 : _library$eth.Contract]);\n  return mounajiTestSwap;\n};\n\n_s(useMounajiTestSwap, \"ybOzzH1w2HBKnwK3tkyCkFQqfro=\", false, function () {\n  return [useWeb3React];\n});\n\nexport default useMounajiTestSwap;","map":{"version":3,"sources":["D:/Github/starway_dapp/starway/src/hooks/useMounajiTestSwap/index.js"],"names":["useMemo","useWeb3React","MounajiTestSwapArtifact","address","abi","useMounajiTestSwap","active","library","chainId","mounajiTestSwap","eth","Contract"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,uBAAP,MAAoC,qDAApC;AAEA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAmBF,uBAAzB;;AAEA,MAASG,kBAAkB,GAAG,MAAM;AAAA;;AAAA;;AAChC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA+BP,YAAY,EAAjD;AAEA,QAAMQ,eAAe,GAAGT,OAAO,CAC3B,MACI;AACG,QAAIM,MAAJ,EACC,OAAO,IAAIC,OAAO,CAACG,GAAR,CAAYC,QAAhB,CAAyBP,GAAzB,EAA8BD,OAAO,CAACK,OAAD,CAArC,CAAP;AACH,GALsB,EAM3B,CAACF,MAAD,EAASE,OAAT,EAAkBD,OAAlB,aAAkBA,OAAlB,uCAAkBA,OAAO,CAAEG,GAA3B,iDAAkB,aAAcC,QAAhC,CAN2B,CAA/B;AASA,SAAOF,eAAP;AACH,CAbD;;GAASJ,kB;UACgCJ,Y;;;AAczC,eAAeI,kBAAf","sourcesContent":["import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestSwapArtifact from '../../config/web3/artifacts/MounajiTestSwapContract';\r\n\r\nconst { address, abi } = MounajiTestSwapArtifact;\r\n\r\nconst    useMounajiTestSwap = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestSwap = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestSwap;\r\n};\r\n\r\nexport default useMounajiTestSwap;"]},"metadata":{},"sourceType":"module"}