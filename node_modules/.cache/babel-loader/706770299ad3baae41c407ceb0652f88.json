{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport MounajiTestArtifact from '../../config/web3/artifacts/MounajiTestContract';\nconst {\n  address,\n  abi\n} = MounajiTestArtifact;\n\nconst useMounajiTestContract = () => {\n  _s();\n\n  var _library$eth;\n\n  const {\n    active,\n    library,\n    chainId\n  } = useWeb3React();\n  const mounajiTestContract = useMemo(() => {\n    if (active) return new library.eth.Contract(abi, address[chainId]);\n  }, [active, chainId, library === null || library === void 0 ? void 0 : (_library$eth = library.eth) === null || _library$eth === void 0 ? void 0 : _library$eth.Contract]);\n  return mounajiTestContract;\n};\n\n_s(useMounajiTestContract, \"eaziBL/32BCIshrtOZxPtSqJiPQ=\", false, function () {\n  return [useWeb3React];\n});\n\nexport default useMounajiTestContract;","map":{"version":3,"sources":["D:/Github/starway_dapp/starway/src/hooks/useMounajiTestContract/index.js"],"names":["useMemo","useWeb3React","MounajiTestArtifact","address","abi","useMounajiTestContract","active","library","chainId","mounajiTestContract","eth","Contract"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AAEA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAmBF,mBAAzB;;AAEA,MAASG,sBAAsB,GAAG,MAAM;AAAA;;AAAA;;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA+BP,YAAY,EAAjD;AAEA,QAAMQ,mBAAmB,GAAGT,OAAO,CAC/B,MACI;AACG,QAAIM,MAAJ,EACC,OAAO,IAAIC,OAAO,CAACG,GAAR,CAAYC,QAAhB,CAAyBP,GAAzB,EAA8BD,OAAO,CAACK,OAAD,CAArC,CAAP;AACH,GAL0B,EAM/B,CAACF,MAAD,EAASE,OAAT,EAAkBD,OAAlB,aAAkBA,OAAlB,uCAAkBA,OAAO,CAAEG,GAA3B,iDAAkB,aAAcC,QAAhC,CAN+B,CAAnC;AASA,SAAOF,mBAAP;AACH,CAbD;;GAASJ,sB;UACgCJ,Y;;;AAczC,eAAeI,sBAAf","sourcesContent":["import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestArtifact from '../../config/web3/artifacts/MounajiTestContract';\r\n\r\nconst { address, abi } = MounajiTestArtifact;\r\n\r\nconst    useMounajiTestContract = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestContract = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestContract;\r\n};\r\n\r\nexport default useMounajiTestContract;"]},"metadata":{},"sourceType":"module"}