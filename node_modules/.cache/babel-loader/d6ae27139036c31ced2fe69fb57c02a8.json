{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\starway_dapp\\\\msdia80.dll\\\\src\\\\layouts\\\\main\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Flex, HStack, IconButton, useDisclosure, useColorModeValue, Stack, Image, Heading } from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport NavLink from \"./nav-link\";\nimport Footer from \"./footer\";\nimport WalletData from \"./wallet-data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Links = [{\n  name: \"Home\",\n  to: \"/\"\n}, {\n  name: \"SwapTokens\",\n  to: \"/swaptokens\"\n}, {\n  name: \"Ecosystem\",\n  to: \"/ecosystem\"\n}, {\n  name: \"Roadmap\",\n  to: \"/roadmap\"\n}, {\n  name: \"Whitepaper\",\n  to: \"/whitepaper\"\n}];\n\nconst MainLayout = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mx: \"auto\",\n      maxW: \"7xl\",\n      width: \"100%\",\n      bg: useColorModeValue(\"white\", \"gray.800\"),\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        bg: useColorModeValue(\"white\", \"gray.800\"),\n        color: useColorModeValue(\"gray.600\", \"white\"),\n        minH: \"60px\",\n        py: {\n          base: 2\n        },\n        px: {\n          base: 4\n        },\n        borderBottom: 1,\n        borderStyle: \"solid\",\n        borderColor: useColorModeValue(\"gray.200\", \"gray.900\"),\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"md\",\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 44\n          }, this),\n          \"aria-label\": \"Open Menu\",\n          display: {\n            md: \"none\"\n          },\n          onClick: isOpen ? onClose : onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          alignItems: \"center\",\n          position: \"fixed\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"./images/starway.png\",\n              width: \"80px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              color: \"purple\",\n              mt: 0.2,\n              ml: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            as: \"nav\",\n            spacing: 4,\n            display: {\n              base: \"none\",\n              md: \"flex\"\n            },\n            children: Links.map(_ref2 => {\n              let {\n                name,\n                to\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(NavLink, {\n                to: to,\n                children: name\n              }, name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WalletData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n        pb: 4,\n        display: {\n          md: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          as: \"nav\",\n          spacing: 4,\n          children: Links.map(_ref3 => {\n            let {\n              name,\n              to\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(NavLink, {\n              to: to,\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mx: \"auto\",\n      flex: 1,\n      p: 4,\n      maxW: \"7xl\",\n      width: \"100%\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainLayout, \"vEQx/swf6vJvwWpu9Ibkd9cyCRo=\", false, function () {\n  return [useDisclosure, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = MainLayout;\nexport default MainLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainLayout\");","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/layouts/main/index.js"],"names":["Box","Flex","HStack","IconButton","useDisclosure","useColorModeValue","Stack","Image","Heading","HamburgerIcon","CloseIcon","NavLink","Footer","WalletData","Links","name","to","MainLayout","children","isOpen","onOpen","onClose","base","md","map"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  IconButton,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  Image,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\r\nimport NavLink from \"./nav-link\";\r\nimport Footer from \"./footer\";\r\nimport WalletData from \"./wallet-data\";\r\n\r\nconst Links = [\r\n  {\r\n    name: \"Home\",\r\n    to: \"/\",\r\n  },\r\n  {\r\n    name: \"SwapTokens\",\r\n    to: \"/swaptokens\",\r\n  },\r\n  {\r\n    name: \"Ecosystem\",\r\n    to: \"/ecosystem\",\r\n  },\r\n  {\r\n    name: \"Roadmap\",\r\n    to: \"/roadmap\",\r\n  },\r\n  {\r\n    name: \"Whitepaper\",\r\n    to: \"/whitepaper\",\r\n  },\r\n];\r\n\r\nconst MainLayout = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Flex minH=\"100vh\" direction=\"column\">\r\n      <Box\r\n        mx=\"auto\"\r\n        maxW={\"7xl\"}\r\n        width=\"100%\"\r\n        bg={useColorModeValue(\"white\", \"gray.800\")}\r\n        px={4}\r\n      >\r\n        <Flex\r\n          bg={useColorModeValue(\"white\", \"gray.800\")}\r\n          color={useColorModeValue(\"gray.600\", \"white\")}\r\n          minH={\"60px\"}\r\n          py={{ base: 2 }}\r\n          px={{ base: 4 }}\r\n          borderBottom={1}\r\n          borderStyle={\"solid\"}\r\n          borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <IconButton\r\n            size={\"md\"}\r\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n            aria-label={\"Open Menu\"}\r\n            display={{ md: \"none\" }}\r\n            onClick={isOpen ? onClose : onOpen}\r\n          />\r\n          <HStack spacing={8} alignItems={\"center\"} position='fixed'>\r\n            <Flex alignItems=\"center\">\r\n              <Image src=\"./images/starway.png\" width=\"80px\" />\r\n              <Heading size=\"md\" color=\"purple\" mt={0.2} ml={1}>\r\n                \r\n              </Heading>\r\n            </Flex>\r\n            <HStack\r\n              as={\"nav\"}\r\n              spacing={4}\r\n              display={{ base: \"none\", md: \"flex\" }}\r\n            >\r\n              {Links.map(({ name, to }) => (\r\n                <NavLink key={name} to={to}>\r\n                  {name}\r\n                </NavLink>\r\n              ))}\r\n            </HStack>\r\n          </HStack>\r\n          <WalletData />\r\n        </Flex>\r\n\r\n        {isOpen ? (\r\n          <Box pb={4} display={{ md: \"none\" }}  >\r\n            <Stack as={\"nav\"} spacing={4}>\r\n              {Links.map(({ name, to }) => (\r\n                <NavLink key={name} to={to}>\r\n                  {name}\r\n                </NavLink>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n      <Box mx=\"auto\" flex={1} p={4} maxW={\"7xl\"} width=\"100%\">\r\n        {children}\r\n      </Box>\r\n      <Footer />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n"]},"metadata":{},"sourceType":"module"}