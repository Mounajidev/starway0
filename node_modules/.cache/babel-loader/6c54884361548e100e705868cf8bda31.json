{"ast":null,"code":"import{useMemo}from'react';import{useWeb3React}from'@web3-react/core';import MounajiTestSwapArtifact from'../../config/web3/artifacts/MounajiTestSwapContract';var address=MounajiTestSwapArtifact.address,abi=MounajiTestSwapArtifact.abi;var useMounajiTestSwap=function useMounajiTestSwap(){var _library$eth;var _useWeb3React=useWeb3React(),active=_useWeb3React.active,library=_useWeb3React.library,chainId=_useWeb3React.chainId;var mounajiTestSwap=useMemo(function(){if(active)return new library.eth.Contract(abi,address[chainId]);},[active,chainId,library===null||library===void 0?void 0:(_library$eth=library.eth)===null||_library$eth===void 0?void 0:_library$eth.Contract]);return mounajiTestSwap;};export default useMounajiTestSwap;","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/hooks/useMounajiTestSwap/index.js"],"names":["useMemo","useWeb3React","MounajiTestSwapArtifact","address","abi","useMounajiTestSwap","active","library","chainId","mounajiTestSwap","eth","Contract"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,uBAAP,KAAoC,qDAApC,CAEA,GAAQC,CAAAA,OAAR,CAAyBD,uBAAzB,CAAQC,OAAR,CAAiBC,GAAjB,CAAyBF,uBAAzB,CAAiBE,GAAjB,CAEA,GAASC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,kBAChC,kBAAqCJ,YAAY,EAAjD,CAAQK,MAAR,eAAQA,MAAR,CAAgBC,OAAhB,eAAgBA,OAAhB,CAAyBC,OAAzB,eAAyBA,OAAzB,CAEA,GAAMC,CAAAA,eAAe,CAAGT,OAAO,CAC3B,UACI,CACG,GAAIM,MAAJ,CACC,MAAO,IAAIC,CAAAA,OAAO,CAACG,GAAR,CAAYC,QAAhB,CAAyBP,GAAzB,CAA8BD,OAAO,CAACK,OAAD,CAArC,CAAP,CACH,CALsB,CAM3B,CAACF,MAAD,CAASE,OAAT,CAAkBD,OAAlB,SAAkBA,OAAlB,+BAAkBA,OAAO,CAAEG,GAA3B,uCAAkB,aAAcC,QAAhC,CAN2B,CAA/B,CASA,MAAOF,CAAAA,eAAP,CACH,CAbD,CAeA,cAAeJ,CAAAA,kBAAf","sourcesContent":["import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestSwapArtifact from '../../config/web3/artifacts/MounajiTestSwapContract';\r\n\r\nconst { address, abi } = MounajiTestSwapArtifact;\r\n\r\nconst    useMounajiTestSwap = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestSwap = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestSwap;\r\n};\r\n\r\nexport default useMounajiTestSwap;"]},"metadata":{},"sourceType":"module"}