{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\starway_dapp\\\\msdia80.dll\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\nimport { Stack, Flex, Heading, Text, Button, Image, Badge, useToast } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [isMinting, setIsMinting] = useState(false);\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const mounajiTestContract = useMounajiTestContract();\n  const toast = useToast();\n  const getMounajiTestContractData = useCallback(async () => {\n    if (mounajiTestContract) {\n      const totalSupply = await mounajiTestContract.methods.totalSupply().call();\n      const getBalance = await mounajiTestContract.methods.balanceOf(account).call(); //   .deterministicPseudoRandomDNA(totalSupply, account)\n      //   .call();\n      // const image = await mounajiTestContract.methods.imageByDNA(dnaPreview).call();\n      // setImageSrc(image);\n    }\n  }, [mounajiTestContract, account]);\n  useEffect(() => {\n    getMounajiTestContractData();\n  }, [getMounajiTestContractData]);\n\n  const mint = () => {\n    setIsMinting(true);\n    mounajiTestContract.methods.mint(account, 1000000).send({\n      from: account,\n      value: 1e18\n    }).on('transactionHash', txHash => {\n      setIsMinting(false);\n      toast({\n        title: 'transaccion enviada',\n        description: 'txHash',\n        status: 'info'\n      });\n    }).on('receipt', () => {\n      setIsMinting(false);\n      toast({\n        title: 'Transaccion confirmada !',\n        description: 'Enjoy playing Starway !',\n        status: 'success'\n      });\n    }).on('error', error => {\n      setIsMinting(false);\n      toast({\n        title: 'Transaccion fallida',\n        description: error.message,\n        status: 'error'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    align: \"center\",\n    spacing: {\n      base: 8,\n      md: 10\n    },\n    py: {\n      base: 20,\n      md: 28\n    },\n    direction: {\n      base: \"column-reverse\",\n      md: \"row\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      flex: 1,\n      spacing: {\n        base: 5,\n        md: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontWeight: 600,\n        fontSize: {\n          base: \"3xl\",\n          sm: \"4xl\",\n          lg: \"6xl\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          position: \"relative\",\n          _after: {\n            content: \"''\",\n            width: \"full\",\n            height: \"30%\",\n            position: \"absolute\",\n            bottom: 1,\n            left: 0,\n            bg: \"green.400\",\n            zIndex: -1\n          },\n          children: \"StarWay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          color: \"green.400\",\n          children: \"Play your Path !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: \"Star token is a cryto-currency that is used for participate in Rank modes on Starway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"green.500\",\n        children: \"Get your Stars and start ean for playing now !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: {\n          base: 4,\n          sm: 6\n        },\n        direction: {\n          base: \"column\",\n          sm: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          rounded: \"full\",\n          size: \"lg\",\n          fontWeight: \"normal\",\n          px: 6,\n          colorScheme: \"green\",\n          bg: \"green.400\",\n          _hover: {\n            bg: \"green.500\"\n          },\n          disabled: !mounajiTestContract,\n          onClick: mint,\n          isLoading: isMinting,\n          children: \"Get your Star Token !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/swaptokens\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            rounded: \"full\",\n            size: \"lg\",\n            fontWeight: \"normal\",\n            px: 6,\n            children: \"SwapTokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flex: 1,\n      direction: \"column\",\n      justify: \"center\",\n      align: \"center\",\n      position: \"relative\",\n      w: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: active ? imageSrc : \"https://avataaars.io/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            children: [\"Next ID:\", /*#__PURE__*/_jsxDEV(Badge, {\n              ml: 1,\n              colorScheme: \"green\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            ml: 2,\n            children: [\"Address:\", /*#__PURE__*/_jsxDEV(Badge, {\n              ml: 1,\n              colorScheme: \"green\",\n              children: \"0x0000...0000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getMounajiTestContractData,\n          mt: 4,\n          size: \"xs\",\n          colorScheme: \"green\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Badge, {\n        mt: 2,\n        children: \"Wallet desconectado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"I7JZc4ydxf7QmmWvD97lDirGows=\", false, function () {\n  return [useWeb3React, useMounajiTestContract, useToast];\n});\n\n_c = Home;\nexport default Home; // import { useWeb3React } from '@web3-react/core';\n// import { useCallback, useEffect, useState } from 'react';\n// import useMounajiTestContract from '../../hooks/useMounajiTestContract';\n// const Home = () => {\n//   const { active }  = useWeb3React(); \n//   const [totalSupply, setTotalSupply] = useState();\n//   const mounajiTestContract = useMounajiTestContract();\n//   const getTotalSupply = useCallback(async () => {\n//     if(mounajiTestContract){\n//       const result = await mounajiTestContract.methods.totalSupply().call();\n//       setTotalSupply(result);\n//     }\n//   }, [mounajiTestContract])\n//   useEffect (() => {\n//       getTotalSupply();\n//   }, [getTotalSupply]);\n//   if (!active) return \"Connect your wallet\"\n//   return (\n//     <>\n//       <p>Max supply:{totalSupply} </p>\n//     </>\n//   );\n// };\n// export default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/views/home/index.js"],"names":["useMounajiTestContract","Stack","Flex","Heading","Text","Button","Image","Badge","useToast","Link","useWeb3React","useCallback","useEffect","useState","Home","isMinting","setIsMinting","imageSrc","setImageSrc","active","account","mounajiTestContract","toast","getMounajiTestContractData","totalSupply","methods","call","getBalance","balanceOf","mint","send","from","value","on","txHash","title","description","status","error","message","base","md","sm","lg","content","width","height","position","bottom","left","bg","zIndex"],"mappings":"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","sourcesContent":["import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [isMinting, setIsMinting] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const { active, account } = useWeb3React();\r\n  const mounajiTestContract = useMounajiTestContract();\r\n  const toast = useToast();\r\n  \r\n  const getMounajiTestContractData = useCallback(async () => {\r\n    if (mounajiTestContract) {\r\n      const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n      const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n      //   .deterministicPseudoRandomDNA(totalSupply, account)\r\n      //   .call();\r\n      // const image = await mounajiTestContract.methods.imageByDNA(dnaPreview).call();\r\n      // setImageSrc(image);\r\n    }\r\n  }, [mounajiTestContract, account]);\r\n\r\n  useEffect(() => {\r\n    getMounajiTestContractData();\r\n  }, [getMounajiTestContractData]);\r\n\r\n  const mint = () => {\r\n    setIsMinting(true);\r\n\r\nmounajiTestContract.methods.mint(account, 1000000).send({\r\n\r\n\r\n  from: account,\r\n  value: 1e18\r\n\r\n})\r\n.on('transactionHash', (txHash) => {\r\n  setIsMinting(false);\r\n   toast({\r\n     title: 'transaccion enviada',\r\n     description: 'txHash',\r\n     status: 'info'\r\n   })\r\n\r\n})\r\n.on('receipt',() => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion confirmada !',\r\n    description: 'Enjoy playing Starway !',\r\n    status: 'success'\r\n\r\n  })\r\n\r\n})\r\n.on('error', (error) => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion fallida',\r\n    description: error.message,\r\n    status: 'error',\r\n  })\r\n\r\n})\r\n  }\r\n  return (\r\n    <Stack\r\n      align={\"center\"}\r\n      spacing={{ base: 8, md: 10 }}\r\n      py={{ base: 20, md: 28 }}\r\n      direction={{ base: \"column-reverse\", md: \"row\" }}\r\n    >\r\n      <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n        <Heading\r\n          lineHeight={1.1}\r\n          fontWeight={600}\r\n          fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n        >\r\n          <Text\r\n            as={\"span\"}\r\n            position={\"relative\"}\r\n            _after={{\r\n              content: \"''\",\r\n              width: \"full\",\r\n              height: \"30%\",\r\n              position: \"absolute\",\r\n              bottom: 1,\r\n              left: 0,\r\n              bg: \"green.400\",\r\n              zIndex: -1,\r\n            }}\r\n          >\r\n            StarWay\r\n          </Text>\r\n          <br />\r\n          <Text as={\"span\"} color={\"green.400\"}>\r\n            Play your Path !\r\n          </Text>\r\n        </Heading>\r\n        <Text color={\"gray.500\"}>\r\n          Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n        </Text>\r\n        <Text color={\"green.500\"}>\r\n          Get your Stars and start ean for playing now !\r\n        </Text>\r\n        <Stack\r\n          spacing={{ base: 4, sm: 6 }}\r\n          direction={{ base: \"column\", sm: \"row\" }}\r\n        >\r\n          <Button\r\n            rounded={\"full\"}\r\n            size={\"lg\"}\r\n            fontWeight={\"normal\"}\r\n            px={6}\r\n            colorScheme={\"green\"}\r\n            bg={\"green.400\"}\r\n            _hover={{ bg: \"green.500\" }}\r\n            disabled={!mounajiTestContract}\r\n            onClick={mint}\r\n            isLoading= {isMinting}\r\n          >\r\n            Get your Star Token !\r\n          </Button>\r\n          <Link to=\"/swaptokens\">\r\n            <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n              SwapTokens\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      <Flex\r\n        flex={1}\r\n        direction=\"column\"\r\n        justify={\"center\"}\r\n        align={\"center\"}\r\n        position={\"relative\"}\r\n        w={\"full\"}\r\n      >\r\n        <Image src={active ? imageSrc : \"https://avataaars.io/\"} />\r\n        {active ? (\r\n          <>\r\n            <Flex mt={2}>\r\n              <Badge>\r\n                Next ID:\r\n                <Badge ml={1} colorScheme=\"green\">\r\n                  1\r\n                </Badge>\r\n              </Badge>\r\n              <Badge ml={2}>\r\n                Address:\r\n                <Badge ml={1} colorScheme=\"green\">\r\n                  0x0000...0000\r\n                </Badge>\r\n              </Badge>\r\n            </Flex>\r\n            <Button\r\n              onClick={getMounajiTestContractData}\r\n              mt={4}\r\n              size=\"xs\"\r\n              colorScheme=\"green\"\r\n            >\r\n              Actualizar\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Badge mt={2}>Wallet desconectado</Badge>\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useWeb3React } from '@web3-react/core';\r\n// import { useCallback, useEffect, useState } from 'react';\r\n// import useMounajiTestContract from '../../hooks/useMounajiTestContract';\r\n\r\n// const Home = () => {\r\n//   const { active }  = useWeb3React(); \r\n//   const [totalSupply, setTotalSupply] = useState();\r\n\r\n//   const mounajiTestContract = useMounajiTestContract();\r\n\r\n//   const getTotalSupply = useCallback(async () => {\r\n//     if(mounajiTestContract){\r\n//       const result = await mounajiTestContract.methods.totalSupply().call();\r\n//       setTotalSupply(result);\r\n//     }\r\n\r\n//   }, [mounajiTestContract])\r\n\r\n//   useEffect (() => {\r\n//       getTotalSupply();\r\n//   }, [getTotalSupply]);\r\n\r\n//   if (!active) return \"Connect your wallet\"\r\n\r\n//   return (\r\n//     <>\r\n//       <p>Max supply:{totalSupply} </p>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n"]},"metadata":{},"sourceType":"module"}