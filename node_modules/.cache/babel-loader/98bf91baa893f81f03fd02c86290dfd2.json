{"ast":null,"code":"import _regeneratorRuntime from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import useMounajiTestContract from\"../../hooks/useMounajiTestContract\";import{Stack,Flex,Heading,Text,Box,Button,Image,Badge,useToast}from\"@chakra-ui/react\";import{Link}from\"react-router-dom\";import{useWeb3React}from\"@web3-react/core\";import{useCallback,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isMinting=_useState2[0],setIsMinting=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),imageSrc=_useState4[0],setImageSrc=_useState4[1];var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account;var mounajiTestContract=useMounajiTestContract();var toast=useToast();var getMounajiTestContractData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var totalSupply,getBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!mounajiTestContract){_context.next=7;break;}_context.next=3;return mounajiTestContract.methods.totalSupply().call();case 3:totalSupply=_context.sent;_context.next=6;return mounajiTestContract.methods.balanceOf(account).call();case 6:getBalance=_context.sent;case 7:case\"end\":return _context.stop();}}},_callee);})),[mounajiTestContract,account]);useEffect(function(){getMounajiTestContractData();},[getMounajiTestContractData]);var mint=function mint(){setIsMinting(true);mounajiTestContract.methods.mint(account,1000000).send({from:account,value:1e18}).on('transactionHash',function(txHash){setIsMinting(false);toast({title:'transaccion enviada',description:'txHash',status:'info'});}).on('receipt',function(){setIsMinting(false);toast({title:'Transaccion confirmada !',description:'Enjoy playing Starway !',status:'success'});}).on('error',function(error){setIsMinting(false);toast({title:'Transaccion fallida',description:error.message,status:'error'});});};return/*#__PURE__*/_jsxs(Box,{backgroundImage:\"'/images/fondoespacio.png'\",image:\"./images.starway.png\",pos:\"absolute\",align:\"center\",justify:\"center\",backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\",margin:\"0\",top:\"55px\",left:\"0\",w:\"100%\",h:\"100%\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/starway.png\",pos:\"absolute\"}),/*#__PURE__*/_jsxs(Stack,{align:\"center\",spacing:{base:8,md:10},py:{base:20,md:28},direction:{base:\"column-reverse\",md:\"row\"},children:[/*#__PURE__*/_jsxs(Stack,{flex:1,spacing:{base:5,md:10},children:[/*#__PURE__*/_jsxs(Heading,{lineHeight:1.1,fontWeight:600,fontSize:{base:\"3xl\",sm:\"4xl\",lg:\"6xl\"},children:[/*#__PURE__*/_jsx(Text,{as:\"span\",position:\"relative\",_after:{content:\"''\",width:\"full\",height:\"30%\",position:\"absolute\",bottom:1,left:0,bg:\"green.400\",zIndex:-1},children:\"StarWay\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Text,{as:\"span\",color:\"green.400\",children:\"Play your Path !!!\"})]}),/*#__PURE__*/_jsx(Text,{color:\"gray.500\",children:\"Star token is a cryto-currency that is used for participate in Rank modes on Starway\"}),/*#__PURE__*/_jsx(Text,{color:\"green.500\",children:\"Get your Stars and start ean for playing now !\"}),/*#__PURE__*/_jsxs(Stack,{spacing:{base:4,sm:6},direction:{base:\"column\",sm:\"row\"},children:[/*#__PURE__*/_jsx(Button,{rounded:\"full\",size:\"lg\",fontWeight:\"normal\",px:6,colorScheme:\"green\",bg:\"green.400\",_hover:{bg:\"green.500\"},disabled:!mounajiTestContract,onClick:mint,isLoading:isMinting,children:\"Get your Star Token !\"}),/*#__PURE__*/_jsx(Link,{to:\"/swaptokens\",children:/*#__PURE__*/_jsx(Button,{rounded:\"full\",size:\"lg\",fontWeight:\"normal\",px:6,children:\"SwapTokens\"})})]})]}),/*#__PURE__*/_jsxs(Flex,{flex:1,direction:\"column\",justify:\"center\",align:\"center\",position:\"relative\",w:\"full\",children:[/*#__PURE__*/_jsx(Image,{src:active?imageSrc:\"../../images/starway.png\"}),active?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Flex,{mt:2,children:[/*#__PURE__*/_jsxs(Badge,{children:[\"Next ID:\",/*#__PURE__*/_jsx(Badge,{ml:1,colorScheme:\"green\",children:\"1\"})]}),/*#__PURE__*/_jsxs(Badge,{ml:2,children:[\"Address:\",/*#__PURE__*/_jsx(Badge,{ml:1,colorScheme:\"green\",children:\"0x0000...0000\"})]})]}),/*#__PURE__*/_jsx(Button,{onClick:getMounajiTestContractData,mt:4,size:\"xs\",colorScheme:\"blue\",children:\"Actualizar\"})]}):/*#__PURE__*/_jsx(Badge,{mt:2,children:\"Wallet desconectado\"})]})]})]});};export default Home;// import { useWeb3React } from '@web3-react/core';\n// import { useCallback, useEffect, useState } from 'react';\n// import useMounajiTestContract from '../../hooks/useMounajiTestContract';\n// const Home = () => {\n//   const { active }  = useWeb3React(); \n//   const [totalSupply, setTotalSupply] = useState();\n//   const mounajiTestContract = useMounajiTestContract();\n//   const getTotalSupply = useCallback(async () => {\n//     if(mounajiTestContract){\n//       const result = await mounajiTestContract.methods.totalSupply().call();\n//       setTotalSupply(result);\n//     }\n//   }, [mounajiTestContract])\n//   useEffect (() => {\n//       getTotalSupply();\n//   }, [getTotalSupply]);\n//   if (!active) return \"Connect your wallet\"\n//   return (\n//     <>\n//       <p>Max supply:{totalSupply} </p>\n//     </>\n//   );\n// };\n// export default Home;","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/views/home/index.js"],"names":["useMounajiTestContract","Stack","Flex","Heading","Text","Box","Button","Image","Badge","useToast","Link","useWeb3React","useCallback","useEffect","useState","Home","isMinting","setIsMinting","imageSrc","setImageSrc","active","account","mounajiTestContract","toast","getMounajiTestContractData","methods","totalSupply","call","balanceOf","getBalance","mint","send","from","value","on","txHash","title","description","status","error","message","base","md","sm","lg","content","width","height","position","bottom","left","bg","zIndex"],"mappings":"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","sourcesContent":["import useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  Stack,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Button,\r\n  Image,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [isMinting, setIsMinting] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const { active, account } = useWeb3React();\r\n  const mounajiTestContract = useMounajiTestContract();\r\n  const toast = useToast();\r\n  \r\n  const getMounajiTestContractData = useCallback(async () => {\r\n    if (mounajiTestContract) {\r\n      const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n      const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n      //   .deterministicPseudoRandomDNA(totalSupply, account)\r\n      //   .call();\r\n      // const image = await mounajiTestContract.methods.imageByDNA(dnaPreview).call();\r\n      // setImageSrc(image);\r\n    }\r\n  }, [mounajiTestContract, account]);\r\n\r\n  useEffect(() => {\r\n    getMounajiTestContractData();\r\n  }, [getMounajiTestContractData]);\r\n\r\n  const mint = () => {\r\n    setIsMinting(true);\r\n\r\nmounajiTestContract.methods.mint(account, 1000000).send({\r\n\r\n\r\n  from: account,\r\n  value: 1e18\r\n\r\n})\r\n.on('transactionHash', (txHash) => {\r\n  setIsMinting(false);\r\n   toast({\r\n     title: 'transaccion enviada',\r\n     description: 'txHash',\r\n     status: 'info'\r\n   })\r\n\r\n})\r\n.on('receipt',() => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion confirmada !',\r\n    description: 'Enjoy playing Starway !',\r\n    status: 'success'\r\n\r\n  })\r\n\r\n})\r\n.on('error', (error) => {\r\n  setIsMinting(false);\r\n  toast({\r\n    title: 'Transaccion fallida',\r\n    description: error.message,\r\n    status: 'error',\r\n  })\r\n\r\n})\r\n  }\r\n  return (\r\n  <Box\r\n\r\n  backgroundImage=\"'/images/fondoespacio.png'\"\r\n  image=\"./images.starway.png\"\r\n  pos={\"absolute\"}\r\n  align={\"center\"}\r\n  justify={\"center\"}\r\n  backgroundRepeat={\"no-repeat\"}\r\n  backgroundSize={\"cover\"}\r\n  margin={\"0\"}\r\n  top={\"55px\" }\r\n  left={\"0\"}\r\n  w={\"100%\"}\r\n  h={\"100%\"}\r\n>\r\n<Image \r\n  src={\"/images/starway.png\"}\r\n  pos={\"absolute\"}\r\n  \r\n  \r\n/>\r\n  \r\n<Stack\r\n      \r\n      align={\"center\"}\r\n      spacing={{ base: 8, md: 10 }}\r\n      py={{ base: 20, md: 28 }}\r\n      direction={{ base: \"column-reverse\", md: \"row\" }}\r\n    >\r\n      <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n        <Heading\r\n          lineHeight={1.1}\r\n          fontWeight={600}\r\n          fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n        >\r\n          <Text\r\n            as={\"span\"}\r\n            position={\"relative\"}\r\n            _after={{\r\n              content: \"''\",\r\n              width: \"full\",\r\n              height: \"30%\",\r\n              position: \"absolute\",\r\n              bottom: 1,\r\n              left: 0,\r\n              bg: \"green.400\",\r\n              zIndex: -1,\r\n            }}\r\n          >\r\n            StarWay\r\n          </Text>\r\n          <br />\r\n          <Text as={\"span\"} color={\"green.400\"}>\r\n            Play your Path !!!\r\n          </Text>\r\n        </Heading>\r\n        <Text color={\"gray.500\"}>\r\n          Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n        </Text>\r\n        <Text color={\"green.500\"}>\r\n          Get your Stars and start ean for playing now !\r\n        </Text>\r\n        <Stack\r\n          spacing={{ base: 4, sm: 6 }}\r\n          direction={{ base: \"column\", sm: \"row\" }}\r\n        >\r\n          <Button\r\n            rounded={\"full\"}\r\n            size={\"lg\"}\r\n            fontWeight={\"normal\"}\r\n            px={6}\r\n            colorScheme={\"green\"}\r\n            bg={\"green.400\"}\r\n            _hover={{ bg: \"green.500\" }}\r\n            disabled={!mounajiTestContract}\r\n            onClick={mint}\r\n            isLoading= {isMinting}\r\n          >\r\n            Get your Star Token !\r\n          </Button>\r\n          <Link to=\"/swaptokens\">\r\n            <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n              SwapTokens\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      <Flex\r\n        flex={1}\r\n        direction=\"column\"\r\n        justify={\"center\"}\r\n        align={\"center\"}\r\n        position={\"relative\"}\r\n        w={\"full\"}\r\n      >\r\n        <Image \r\n        src={active ? imageSrc : \"../../images/starway.png\"} />\r\n        {active ? (\r\n          <>\r\n            <Flex mt={2}>\r\n              <Badge>\r\n                Next ID:\r\n                <Badge ml={1} colorScheme=\"green\">\r\n                  1\r\n                </Badge>\r\n              </Badge>\r\n              <Badge ml={2}>\r\n                Address:\r\n                <Badge ml={1} colorScheme=\"green\">\r\n                  0x0000...0000\r\n                </Badge>\r\n              </Badge>\r\n            </Flex>\r\n            <Button\r\n              onClick={getMounajiTestContractData}\r\n              mt={4}\r\n              size=\"xs\"\r\n              colorScheme=\"blue\"\r\n            >\r\n              Actualizar\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Badge mt={2}>Wallet desconectado</Badge>\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n    </Box>  \r\n      \r\n    \r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useWeb3React } from '@web3-react/core';\r\n// import { useCallback, useEffect, useState } from 'react';\r\n// import useMounajiTestContract from '../../hooks/useMounajiTestContract';\r\n\r\n// const Home = () => {\r\n//   const { active }  = useWeb3React(); \r\n//   const [totalSupply, setTotalSupply] = useState();\r\n\r\n//   const mounajiTestContract = useMounajiTestContract();\r\n\r\n//   const getTotalSupply = useCallback(async () => {\r\n//     if(mounajiTestContract){\r\n//       const result = await mounajiTestContract.methods.totalSupply().call();\r\n//       setTotalSupply(result);\r\n//     }\r\n\r\n//   }, [mounajiTestContract])\r\n\r\n//   useEffect (() => {\r\n//       getTotalSupply();\r\n//   }, [getTotalSupply]);\r\n\r\n//   if (!active) return \"Connect your wallet\"\r\n\r\n//   return (\r\n//     <>\r\n//       <p>Max supply:{totalSupply} </p>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n"]},"metadata":{},"sourceType":"module"}