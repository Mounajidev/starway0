{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\starway_dapp\\\\msdia80.dll\\\\src\\\\layouts\\\\main\\\\wallet-data\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, Button, Tag, TagLabel, Badge, TagCloseButton } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { connector } from \"../../../config/web3\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useTruncatedAddress from \"../../../hooks/useTruncatedAddress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletData = () => {\n  _s();\n\n  const [balance, setBalance] = useState(0);\n  const {\n    active,\n    activate,\n    deactivate,\n    account,\n    error,\n    library\n  } = useWeb3React();\n  const isUnsupportedChain = error instanceof UnsupportedChainIdError;\n  const connect = useCallback(() => {\n    activate(connector);\n    localStorage.setItem(\"previouslyConnected\", \"true\");\n  }, [activate]);\n\n  const disconnect = () => {\n    deactivate();\n    localStorage.removeItem(\"previouslyConnected\");\n  };\n\n  const getBalance = useCallback(async () => {\n    const toSet = await library.eth.getBalance(account);\n    setBalance((toSet / 1e18).toFixed(2));\n  }, [library === null || library === void 0 ? void 0 : library.eth, account]);\n  useEffect(() => {\n    if (active) getBalance();\n  }, [active, getBalance]);\n  useEffect(() => {\n    if (localStorage.getItem(\"previouslyConnected\") === \"true\") connect();\n  }, [connect]);\n  const truncatedAddress = useTruncatedAddress(account);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    children: active ? /*#__PURE__*/_jsxDEV(Tag, {\n      colorScheme: \"green\",\n      borderRadius: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(TagLabel, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/swaptokens\",\n          children: truncatedAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        d: {\n          base: \"none\",\n          md: \"block\"\n        },\n        variant: \"solid\",\n        fontSize: \"0.8rem\",\n        ml: 1,\n        children: [\"~\", balance, \" \\u039E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TagCloseButton, {\n        onClick: disconnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      colorScheme: \"green\",\n      size: \"sm\",\n      leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this),\n      onClick: connect,\n      disabled: isUnsupportedChain,\n      children: isUnsupportedChain ? \"Red no soportada\" : \"Conectar wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletData, \"MV6d+91PMHXXyrHzkXLK0zzsx8g=\", false, function () {\n  return [useWeb3React, useTruncatedAddress];\n});\n\n_c = WalletData;\nexport default WalletData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletData\");","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/layouts/main/wallet-data/index.js"],"names":["Flex","Button","Tag","TagLabel","Badge","TagCloseButton","AddIcon","Link","UnsupportedChainIdError","useWeb3React","connector","useCallback","useEffect","useState","useTruncatedAddress","WalletData","balance","setBalance","active","activate","deactivate","account","error","library","isUnsupportedChain","connect","localStorage","setItem","disconnect","removeItem","getBalance","toSet","eth","toFixed","getItem","truncatedAddress","base","md"],"mappings":"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","sourcesContent":["import {\r\n  Flex,\r\n  Button,\r\n  Tag,\r\n  TagLabel,\r\n  Badge,\r\n  TagCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { connector } from \"../../../config/web3\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useTruncatedAddress from \"../../../hooks/useTruncatedAddress\";\r\n\r\nconst WalletData = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  const { active, activate, deactivate, account, error, library } =\r\n    useWeb3React();\r\n\r\n  const isUnsupportedChain = error instanceof UnsupportedChainIdError;\r\n\r\n  const connect = useCallback(() => {\r\n    activate(connector);\r\n    localStorage.setItem(\"previouslyConnected\", \"true\");\r\n  }, [activate]);\r\n\r\n  const disconnect = () => {\r\n    deactivate();\r\n    localStorage.removeItem(\"previouslyConnected\");\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    const toSet = await library.eth.getBalance(account);\r\n    setBalance((toSet / 1e18).toFixed(2));\r\n  }, [library?.eth, account]);\r\n\r\n  useEffect(() => {\r\n    if (active) getBalance();\r\n  }, [active, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"previouslyConnected\") === \"true\") connect();\r\n  }, [connect]);\r\n\r\n  const truncatedAddress = useTruncatedAddress(account);\r\n\r\n  return (\r\n    <Flex alignItems={\"center\"}>\r\n      {active ? (\r\n        <Tag colorScheme=\"green\" borderRadius=\"full\">\r\n          <TagLabel>\r\n            <Link to=\"/swaptokens\">{truncatedAddress}</Link>\r\n          </TagLabel>\r\n          <Badge\r\n            d={{\r\n              base: \"none\",\r\n              md: \"block\",\r\n            }}\r\n            variant=\"solid\"\r\n            fontSize=\"0.8rem\"\r\n            ml={1}\r\n          >\r\n            ~{balance} Îž\r\n          </Badge>\r\n          <TagCloseButton onClick={disconnect} />\r\n        </Tag>\r\n      ) : (\r\n        <Button\r\n          variant={\"solid\"}\r\n          colorScheme={\"green\"}\r\n          size={\"sm\"}\r\n          leftIcon={<AddIcon />}\r\n          onClick={connect}\r\n          disabled={isUnsupportedChain}\r\n        >\r\n          {isUnsupportedChain ? \"Red no soportada\" : \"Conectar wallet\"}\r\n        </Button>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default WalletData;\r\n"]},"metadata":{},"sourceType":"module"}