{"ast":null,"code":"import _regeneratorRuntime from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Flex,Button,Tag,TagLabel,Badge,TagCloseButton}from\"@chakra-ui/react\";import{AddIcon}from\"@chakra-ui/icons\";import{Link}from\"react-router-dom\";import{UnsupportedChainIdError,useWeb3React}from\"@web3-react/core\";import{connector}from\"../../../config/web3\";import{useCallback,useEffect,useState}from\"react\";import useTruncatedAddress from\"../../../hooks/useTruncatedAddress\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WalletData=function WalletData(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useWeb3React=useWeb3React(),active=_useWeb3React.active,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate,account=_useWeb3React.account,error=_useWeb3React.error,library=_useWeb3React.library;var isUnsupportedChain=error instanceof UnsupportedChainIdError;var connect=useCallback(function(){activate(connector);localStorage.setItem(\"previouslyConnected\",\"true\");},[activate]);var disconnect=function disconnect(){deactivate();localStorage.removeItem(\"previouslyConnected\");};var getBalance=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var toSet;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return library.eth.getBalance(account);case 2:toSet=_context.sent;setBalance((toSet/1e18).toFixed(2));case 4:case\"end\":return _context.stop();}}},_callee);})),[library===null||library===void 0?void 0:library.eth,account]);useEffect(function(){if(active)getBalance();},[active,getBalance]);useEffect(function(){if(localStorage.getItem(\"previouslyConnected\")===\"true\")connect();},[connect]);var truncatedAddress=useTruncatedAddress(account);return/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",children:active?/*#__PURE__*/_jsxs(Tag,{colorScheme:\"green\",borderRadius:\"full\",children:[/*#__PURE__*/_jsx(TagLabel,{children:/*#__PURE__*/_jsx(Link,{to:\"/swaptokens\",children:truncatedAddress})}),/*#__PURE__*/_jsxs(Badge,{d:{base:\"none\",md:\"block\"},variant:\"solid\",fontSize:\"0.8rem\",ml:1,children:[\"~\",balance,\" \\u039E\"]}),/*#__PURE__*/_jsx(TagCloseButton,{onClick:disconnect})]}):/*#__PURE__*/_jsx(Button,{variant:\"solid\",colorScheme:\"green\",size:\"sm\",leftIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:connect,disabled:isUnsupportedChain,children:isUnsupportedChain?\"Red no soportada\":\"Conectar wallet\"})});};export default WalletData;","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/layouts/main/wallet-data/index.js"],"names":["Flex","Button","Tag","TagLabel","Badge","TagCloseButton","AddIcon","Link","UnsupportedChainIdError","useWeb3React","connector","useCallback","useEffect","useState","useTruncatedAddress","WalletData","balance","setBalance","active","activate","deactivate","account","error","library","isUnsupportedChain","connect","localStorage","setItem","disconnect","removeItem","getBalance","eth","toSet","toFixed","getItem","truncatedAddress","base","md"],"mappings":"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","sourcesContent":["import {\r\n  Flex,\r\n  Button,\r\n  Tag,\r\n  TagLabel,\r\n  Badge,\r\n  TagCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { connector } from \"../../../config/web3\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useTruncatedAddress from \"../../../hooks/useTruncatedAddress\";\r\n\r\nconst WalletData = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  const { active, activate, deactivate, account, error, library } =\r\n    useWeb3React();\r\n\r\n  const isUnsupportedChain = error instanceof UnsupportedChainIdError;\r\n\r\n  const connect = useCallback(() => {\r\n    activate(connector);\r\n    localStorage.setItem(\"previouslyConnected\", \"true\");\r\n  }, [activate]);\r\n\r\n  const disconnect = () => {\r\n    deactivate();\r\n    localStorage.removeItem(\"previouslyConnected\");\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    const toSet = await library.eth.getBalance(account);\r\n    setBalance((toSet / 1e18).toFixed(2));\r\n  }, [library?.eth, account]);\r\n\r\n  useEffect(() => {\r\n    if (active) getBalance();\r\n  }, [active, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"previouslyConnected\") === \"true\") connect();\r\n  }, [connect]);\r\n\r\n  const truncatedAddress = useTruncatedAddress(account);\r\n\r\n  return (\r\n    <Flex alignItems={\"center\"}>\r\n      {active ? (\r\n        <Tag colorScheme=\"green\" borderRadius=\"full\">\r\n          <TagLabel>\r\n            <Link to=\"/swaptokens\">{truncatedAddress}</Link>\r\n          </TagLabel>\r\n          <Badge\r\n            d={{\r\n              base: \"none\",\r\n              md: \"block\",\r\n            }}\r\n            variant=\"solid\"\r\n            fontSize=\"0.8rem\"\r\n            ml={1}\r\n          >\r\n            ~{balance} Îž\r\n          </Badge>\r\n          <TagCloseButton onClick={disconnect} />\r\n        </Tag>\r\n      ) : (\r\n        <Button\r\n          variant={\"solid\"}\r\n          colorScheme={\"green\"}\r\n          size={\"sm\"}\r\n          leftIcon={<AddIcon />}\r\n          onClick={connect}\r\n          disabled={isUnsupportedChain}\r\n        >\r\n          {isUnsupportedChain ? \"Red no soportada\" : \"Conectar wallet\"}\r\n        </Button>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default WalletData;\r\n"]},"metadata":{},"sourceType":"module"}