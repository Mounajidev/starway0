{"ast":null,"code":"import{useMemo}from'react';import{useWeb3React}from'@web3-react/core';import MounajiTestArtifact from'../../config/web3/artifacts/MounajiTestContract';var address=MounajiTestArtifact.address,abi=MounajiTestArtifact.abi;var useMounajiTestContract=function useMounajiTestContract(){var _library$eth;var _useWeb3React=useWeb3React(),active=_useWeb3React.active,library=_useWeb3React.library,chainId=_useWeb3React.chainId;var mounajiTestContract=useMemo(function(){if(active)return new library.eth.Contract(abi,address[chainId]);},[active,chainId,library===null||library===void 0?void 0:(_library$eth=library.eth)===null||_library$eth===void 0?void 0:_library$eth.Contract]);return mounajiTestContract;};export default useMounajiTestContract;","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/hooks/useMounajiTestContract/index.js"],"names":["useMemo","useWeb3React","MounajiTestArtifact","address","abi","useMounajiTestContract","active","library","chainId","mounajiTestContract","eth","Contract"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,iDAAhC,CAEA,GAAQC,CAAAA,OAAR,CAAyBD,mBAAzB,CAAQC,OAAR,CAAiBC,GAAjB,CAAyBF,mBAAzB,CAAiBE,GAAjB,CAEA,GAASC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,kBACpC,kBAAqCJ,YAAY,EAAjD,CAAQK,MAAR,eAAQA,MAAR,CAAgBC,OAAhB,eAAgBA,OAAhB,CAAyBC,OAAzB,eAAyBA,OAAzB,CAEA,GAAMC,CAAAA,mBAAmB,CAAGT,OAAO,CAC/B,UACI,CACG,GAAIM,MAAJ,CACC,MAAO,IAAIC,CAAAA,OAAO,CAACG,GAAR,CAAYC,QAAhB,CAAyBP,GAAzB,CAA8BD,OAAO,CAACK,OAAD,CAArC,CAAP,CACH,CAL0B,CAM/B,CAACF,MAAD,CAASE,OAAT,CAAkBD,OAAlB,SAAkBA,OAAlB,+BAAkBA,OAAO,CAAEG,GAA3B,uCAAkB,aAAcC,QAAhC,CAN+B,CAAnC,CASA,MAAOF,CAAAA,mBAAP,CACH,CAbD,CAeA,cAAeJ,CAAAA,sBAAf","sourcesContent":["import { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport MounajiTestArtifact from '../../config/web3/artifacts/MounajiTestContract';\r\n\r\nconst { address, abi } = MounajiTestArtifact;\r\n\r\nconst    useMounajiTestContract = () => {\r\n    const { active, library, chainId } = useWeb3React();\r\n\r\n    const mounajiTestContract = useMemo (\r\n        () => \r\n            {\r\n               if (active) \r\n                return new library.eth.Contract(abi, address[chainId])\r\n            },\r\n        [active, chainId, library?.eth?.Contract]\r\n    );\r\n\r\n    return mounajiTestContract;\r\n};\r\n\r\nexport default useMounajiTestContract;"]},"metadata":{},"sourceType":"module"}