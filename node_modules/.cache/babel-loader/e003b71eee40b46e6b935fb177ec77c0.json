{"ast":null,"code":"import _regeneratorRuntime from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Github/starway_dapp/msdia80.dll/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React}from'@web3-react/core';import React from'react';import{useCallback,useEffect,useState}from\"react\";import PunkCard from'../../components/punk-card';import Loading from'../../components/loading';import RequestAccess from'../../components/request-access';import useMounajiTestSwap from'../../hooks/useMounajiTestSwap';import useMounajiTestContract from\"../../hooks/useMounajiTestContract\";import{NumberInput,NumberInputField,NumberInputStepper,NumberIncrementStepper,NumberDecrementStepper,Stack,Flex,Heading,Text,Button,Image,Badge,useToast}from\"@chakra-ui/react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SwapTokens=function SwapTokens(){var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isBuying=_useState2[0],setIsBuying=_useState2[1];var mounajiTestSwap=useMounajiTestSwap();var mounajiTestContract=useMounajiTestContract();var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),totalSupply=_useState4[0],setTotalSupply=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),getBalance=_useState6[0],setBalance=_useState6[1];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),inputValue=_React$useState2[0],setInputValue=_React$useState2[1];var handleChange=function handleChange(inputValue){return setInputValue(inputValue);};console.log(inputValue);// state = {tokenAmount};\n// const updateTokenAmount = (event) =>{\n//   setInputValue( event.target.value);\n// };\n// this.handleChange = this.handleChange.bind(this);\nvar toast=useToast();var getMounajiTestContractData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _totalSupply,_getBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!mounajiTestContract){_context.next=9;break;}_context.next=3;return mounajiTestContract.methods.totalSupply().call();case 3:_totalSupply=_context.sent;setTotalSupply(_totalSupply/1e18);_context.next=7;return mounajiTestContract.methods.balanceOf(account).call();case 7:_getBalance=_context.sent;setBalance(_getBalance/1e18);case 9:case\"end\":return _context.stop();}}},_callee);})),[mounajiTestContract,account]);useEffect(function(){getMounajiTestContractData();},[getMounajiTestContractData]);var buy=function buy(){setIsBuying(true);mounajiTestSwap.methods.buyTokens().send({from:account,value:inputValue*1e18/100}).on('transactionHash',function(txHash){toast({tittle:'Transaccion enviada',description:txHash,status:'info'});}).on('receipt',function(){setIsBuying(false);toast({tittle:'Purchase succefull !',description:'Enjoy playing Starway!',status:'success'});}).on('error',function(error){setIsBuying(false);toast({tittle:'Ops, Transaccion failed',description:error.message,status:'error'});});//  inputValue(setInputValue);\n};// console.log( JSON.stringify(mounajiTestSwap) )\nif(!active)return/*#__PURE__*/_jsx(RequestAccess,{});return/*#__PURE__*/_jsxs(Stack,{align:\"center\",spacing:{base:8,md:10},py:{base:20,md:28},direction:{base:\"column-reverse\",md:\"row\"},children:[/*#__PURE__*/_jsxs(Stack,{flex:1,spacing:{base:10,md:10},children:[/*#__PURE__*/_jsxs(Heading,{lineHeight:1.1,fontWeight:600,fontSize:{base:\"3xl\",sm:\"4xl\",lg:\"6xl\"},children:[/*#__PURE__*/_jsx(Text,{as:\"span\",position:\"relative\",_after:{content:\"''\",width:\"full\",height:\"30%\",position:\"absolute\",bottom:1,left:0,bg:\"green.400\",zIndex:-1},children:\"Token Exchange\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Text,{as:\"span\",color:\"blue.400\",children:\"Get your Star Tokens !\"})]}),/*#__PURE__*/_jsxs(Text,{color:\"gray.500\",children:[\"Total Supply of Start Tokens: \",totalSupply]}),/*#__PURE__*/_jsxs(Text,{color:\"gray.500\",children:[\"Stars Tokens you own : \",getBalance]}),/*#__PURE__*/_jsx(Text,{color:\"green.900\",children:\"Get your Stars and start ean for playing now !\"}),/*#__PURE__*/_jsxs(Stack,{spacing:{base:4,sm:6},direction:{base:\"column\",sm:\"row\"},children:[/*#__PURE__*/_jsx(NumberInput,{value:inputValue,type:\"number\",allowMouseWheel:true,defaultValue:0,min:0,onChange:handleChange,children:/*#__PURE__*/_jsx(NumberInputField,{})}),/*#__PURE__*/_jsx(Button,{rounded:\"full\",size:\"lg\",fontWeight:\"normal\",px:20,colorScheme:\"green\",bg:\"green.400\",_hover:{bg:\"green.500\"},disabled:!mounajiTestContract,onClick:buy,isLoading:isBuying,children:\"Buy Stars Tokens\"}),/*#__PURE__*/_jsx(Link,{to:\"/swaptokens\",children:/*#__PURE__*/_jsx(Button,{rounded:\"full\",size:\"lg\",fontWeight:\"normal\",px:6,children:\"SwapTokens\"})})]})]}),/*#__PURE__*/_jsx(Flex,{flex:1,direction:\"column\",justify:\"center\",align:\"center\",position:\"relative\",w:\"full\",children:active?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Flex,{mt:2,children:/*#__PURE__*/_jsxs(Badge,{children:[\"Next ID:\",/*#__PURE__*/_jsx(Badge,{ml:1,colorScheme:\"green\",children:\"1\"})]})}),/*#__PURE__*/_jsx(Button,{onClick:getMounajiTestContractData,mt:4,size:\"xs\",colorScheme:\"green\",children:\"Actualizar\"})]}):/*#__PURE__*/_jsx(Badge,{mt:2,children:\"Wallet desconectado\"})})]});};/*#__PURE__*/_jsx(\"p\",{children:\"Get your Start Tokens !\"});export default SwapTokens;","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/views/swaptokens/index.js"],"names":["useWeb3React","React","useCallback","useEffect","useState","PunkCard","Loading","RequestAccess","useMounajiTestSwap","useMounajiTestContract","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Stack","Flex","Heading","Text","Button","Image","Badge","useToast","Link","SwapTokens","active","account","isBuying","setIsBuying","mounajiTestSwap","mounajiTestContract","totalSupply","setTotalSupply","getBalance","setBalance","inputValue","setInputValue","handleChange","console","log","toast","getMounajiTestContractData","methods","call","balanceOf","buy","buyTokens","send","from","value","on","txHash","tittle","description","status","error","message","base","md","sm","lg","content","width","height","position","bottom","left","bg","zIndex"],"mappings":"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","sourcesContent":["import { useWeb3React } from '@web3-react/core';\r\nimport React from 'react';\r\nimport { useCallback, useEffect, useState } from \"react\"; \r\nimport PunkCard from '../../components/punk-card';\r\nimport Loading from '../../components/loading';\r\nimport RequestAccess from '../../components/request-access';\r\nimport useMounajiTestSwap from '../../hooks/useMounajiTestSwap';\r\nimport useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n    Stack,\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Button,\r\n    Image,\r\n    Badge,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n  import { Link } from \"react-router-dom\";\r\n    \r\n\r\nconst SwapTokens = () => {\r\n\r\n  const { active, account } = useWeb3React();\r\n  const [isBuying, setIsBuying] = useState(false); \r\n    const  mounajiTestSwap  = useMounajiTestSwap();\r\n    const mounajiTestContract = useMounajiTestContract();\r\n    const [totalSupply, setTotalSupply] = useState();\r\n    const [getBalance, setBalance] = useState();\r\n    const [inputValue, setInputValue] = React.useState();\r\n\r\n    const handleChange = (inputValue) => setInputValue(inputValue)\r\nconsole.log (inputValue)\r\n    \r\n    \r\n    // state = {tokenAmount};\r\n\r\n    // const updateTokenAmount = (event) =>{\r\n      \r\n\r\n    //   setInputValue( event.target.value);\r\n        \r\n    // };\r\n     \r\n\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    \r\n    const toast = useToast();\r\n    \r\n    \r\n\r\n    const getMounajiTestContractData = useCallback(async () => {\r\n        if (mounajiTestContract) {\r\n          const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n          setTotalSupply(totalSupply/ 1e18);\r\n\r\n          const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n          setBalance(getBalance/ 1e18);\r\n          \r\n        }\r\n      }, [mounajiTestContract, account]);\r\n\r\n      \r\n      useEffect(() => {\r\n        getMounajiTestContractData();\r\n      }, [getMounajiTestContractData]);\r\n\r\n\r\n      const buy = () => {\r\n        setIsBuying(true);\r\n              \r\n          mounajiTestSwap.methods\r\n          .buyTokens()\r\n          .send({\r\n            from: account,\r\n            value: (inputValue * 1e18 ) / 100,\r\n\r\n          })\r\n          .on('transactionHash', (txHash) => {\r\n            toast({\r\n              tittle:'Transaccion enviada',\r\n              description: txHash,\r\n              status: 'info'\r\n            })\r\n            \r\n          })\r\n          .on('receipt', () => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Purchase succefull !',\r\n              description: 'Enjoy playing Starway!',\r\n              status: 'success'\r\n            })\r\n             \r\n\r\n          })\r\n          .on('error', (error) => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Ops, Transaccion failed',\r\n              description: error.message,\r\n              status: 'error'\r\n            })\r\n\r\n          })\r\n\r\n        //  inputValue(setInputValue);\r\n\r\n    };\r\n\r\n    // console.log( JSON.stringify(mounajiTestSwap) )\r\n       \r\n    if (!active) return <RequestAccess />;\r\n    \r\n    return (\r\n        \r\n            <Stack\r\n              align={\"center\"}\r\n              spacing={{ base: 8, md: 10 }}\r\n              py={{ base: 20, md: 28 }}\r\n              direction={{ base: \"column-reverse\", md: \"row\" }}\r\n            >\r\n              <Stack flex={1} spacing={{ base: 10, md: 10 }}>\r\n                <Heading\r\n                  lineHeight={1.1}\r\n                  fontWeight={600}\r\n                  fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n                >\r\n                  <Text\r\n                    as={\"span\"}\r\n                    position={\"relative\"}\r\n                    \r\n                    _after={{\r\n                      content: \"''\",\r\n                      width: \"full\",\r\n                      height: \"30%\",\r\n                      position: \"absolute\",\r\n                      bottom: 1,\r\n                      left: 0,\r\n                      bg: \"green.400\",\r\n                      zIndex: -1,\r\n                    }}\r\n                  >\r\n                    Token Exchange\r\n                  </Text>\r\n                  <br />\r\n                  <Text as={\"span\"} color={\"blue.400\"}>\r\n                    Get your Star Tokens !\r\n                  </Text>\r\n                </Heading>\r\n                <Text color={\"gray.500\"}>\r\n                  Total Supply of Start Tokens: {totalSupply} \r\n                </Text>\r\n                <Text color={\"gray.500\"}>\r\n                  Stars Tokens you own : {getBalance} \r\n                </Text>\r\n                <Text color={\"green.900\"}>\r\n                  Get your Stars and start ean for playing now !\r\n                </Text>\r\n                <Stack\r\n                  spacing={{ base: 4, sm: 6 }}\r\n                  direction={{ base: \"column\", sm: \"row\" }}\r\n                >\r\n                          <NumberInput value={inputValue} type='number' allowMouseWheel defaultValue={0} min={0}\r\n                          onChange= {handleChange}\r\n                          \r\n                           >\r\n      <NumberInputField />\r\n     \r\n    </NumberInput>\r\n                  <Button\r\n                    rounded={\"full\"}\r\n                    size={\"lg\"}\r\n                    fontWeight={\"normal\"}\r\n                    px={20}\r\n                    colorScheme={\"green\"}\r\n                    bg={\"green.400\"}\r\n                    _hover={{ bg: \"green.500\" }}\r\n                    disabled={!mounajiTestContract}\r\n                    onClick={buy}\r\n                    isLoading= {isBuying}\r\n\r\n                  >\r\n                    Buy Stars Tokens\r\n                  </Button>\r\n                 \r\n          \r\n                  <Link to=\"/swaptokens\">\r\n                    <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n                      SwapTokens\r\n                    </Button>\r\n                  </Link>\r\n                </Stack>\r\n              </Stack>\r\n              <Flex\r\n                flex={1}\r\n                direction=\"column\"\r\n                justify={\"center\"}\r\n                align={\"center\"}\r\n                position={\"relative\"}\r\n                w={\"full\"}\r\n              >\r\n                \r\n                {active ? (\r\n                  <>\r\n                    <Flex mt={2}>\r\n                      <Badge>\r\n                        Next ID:\r\n                        <Badge ml={1} colorScheme=\"green\">\r\n                          1\r\n                        </Badge>\r\n                      </Badge>\r\n                    \r\n                       \r\n                     \r\n                    </Flex>\r\n                    <Button\r\n                      onClick={getMounajiTestContractData}\r\n                      mt={4}\r\n                      size=\"xs\"\r\n                      colorScheme=\"green\"\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Badge mt={2}>Wallet desconectado</Badge>\r\n                )}\r\n              </Flex>\r\n            </Stack>\r\n          );\r\n        };\r\n        \r\n        \r\n        \r\n        <p>Get your Start Tokens !</p>\r\n        \r\n        \r\n    \r\n\r\n\r\nexport default SwapTokens;"]},"metadata":{},"sourceType":"module"}