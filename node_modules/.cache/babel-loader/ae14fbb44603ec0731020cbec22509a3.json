{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\starway_dapp\\\\msdia80.dll\\\\src\\\\views\\\\swaptokens\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useWeb3React } from '@web3-react/core';\nimport React from 'react';\nimport { useCallback, useEffect, useState } from \"react\";\nimport PunkCard from '../../components/punk-card';\nimport Loading from '../../components/loading';\nimport RequestAccess from '../../components/request-access';\nimport useMounajiTestSwap from '../../hooks/useMounajiTestSwap';\nimport useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\nimport { NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Stack, Flex, Heading, Text, Button, Image, Badge, useToast } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SwapTokens = () => {\n  _s();\n\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const [isBuying, setIsBuying] = useState(false);\n  const mounajiTestSwap = useMounajiTestSwap();\n  const mounajiTestContract = useMounajiTestContract();\n  const [totalSupply, setTotalSupply] = useState();\n  const [getBalance, setBalance] = useState();\n  const [inputValue, setInputValue] = React.useState();\n\n  const handleChange = inputValue => setInputValue(inputValue);\n\n  console.log(inputValue); // state = {tokenAmount};\n  // const updateTokenAmount = (event) =>{\n  //   setInputValue( event.target.value);\n  // };\n  // this.handleChange = this.handleChange.bind(this);\n\n  const toast = useToast();\n  const getMounajiTestContractData = useCallback(async () => {\n    if (mounajiTestContract) {\n      const totalSupply = await mounajiTestContract.methods.totalSupply().call();\n      setTotalSupply(totalSupply / 1e18);\n      const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\n      setBalance(getBalance / 1e18);\n    }\n  }, [mounajiTestContract, account]);\n  useEffect(() => {\n    getMounajiTestContractData();\n  }, [getMounajiTestContractData]);\n\n  const buy = () => {\n    setIsBuying(true);\n    mounajiTestSwap.methods.buyTokens().send({\n      from: account,\n      value: inputValue * 1e18 / 100\n    }).on('transactionHash', txHash => {\n      toast({\n        tittle: 'Transaccion enviada',\n        description: txHash,\n        status: 'info'\n      });\n    }).on('receipt', () => {\n      setIsBuying(false);\n      toast({\n        tittle: 'Purchase succefull !',\n        description: 'Enjoy playing Starway!',\n        status: 'success'\n      });\n    }).on('error', error => {\n      setIsBuying(false);\n      toast({\n        tittle: 'Ops, Transaccion failed',\n        description: error.message,\n        status: 'error'\n      });\n    }); //  inputValue(setInputValue);\n  }; // console.log( JSON.stringify(mounajiTestSwap) )\n\n\n  if (!active) return /*#__PURE__*/_jsxDEV(RequestAccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    align: \"center\",\n    spacing: {\n      base: 8,\n      md: 10\n    },\n    py: {\n      base: 20,\n      md: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"span\",\n      position: \"relative\",\n      fontSize: '32px',\n      _after: {\n        content: \"''\",\n        width: \"full\",\n        height: \"30%\",\n        position: \"absolute\",\n        bottom: 1,\n        left: 0,\n        bg: \"green.400\",\n        zIndex: -1\n      },\n      children: \"Token Exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flex: 1,\n      spacing: {\n        base: 10,\n        md: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontWeight: 600,\n        fontSize: {\n          base: \"3xl\",\n          sm: \"4xl\",\n          lg: \"6xl\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          color: \"blue.400\",\n          children: \"Get your Star Tokens !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.500\",\n          alignSelf: 'center',\n          children: \"Star token is a cryto-currency that is used for participate in Rank modes on Starway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: [\"Total Supply of Start Tokens: \", totalSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: [\"Stars Tokens you own : \", getBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"green.900\",\n        children: \"Get your Stars and start ean for playing now !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: {\n          base: 4,\n          sm: 6\n        },\n        direction: {\n          base: \"column\",\n          sm: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(NumberInput, {\n          value: inputValue,\n          type: \"number\",\n          allowMouseWheel: true,\n          defaultValue: 0,\n          min: 0,\n          onChange: handleChange,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          rounded: \"full\",\n          size: \"lg\",\n          fontWeight: \"normal\",\n          px: 20,\n          colorScheme: \"green\",\n          bg: \"green.400\",\n          _hover: {\n            bg: \"green.500\"\n          },\n          disabled: !mounajiTestContract,\n          onClick: buy,\n          isLoading: isBuying,\n          children: \"Buy Stars Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/swaptokens\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            rounded: \"full\",\n            size: \"lg\",\n            fontWeight: \"normal\",\n            px: 6,\n            children: \"SwapTokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flex: 1,\n      direction: \"column\",\n      justify: \"center\",\n      align: \"center\",\n      position: \"relative\",\n      w: \"full\",\n      children: active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            children: [\"Next ID:\", /*#__PURE__*/_jsxDEV(Badge, {\n              ml: 1,\n              colorScheme: \"green\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getMounajiTestContractData,\n          mt: 4,\n          size: \"xs\",\n          colorScheme: \"green\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Badge, {\n        mt: 2,\n        children: \"Wallet desconectado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SwapTokens, \"9HQwgExJHd/6LzYLgSDM/ipr0II=\", false, function () {\n  return [useWeb3React, useMounajiTestSwap, useMounajiTestContract, useToast];\n});\n\n_c = SwapTokens;\n\n/*#__PURE__*/\n_jsxDEV(\"p\", {\n  children: \"Get your Start Tokens !\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 248,\n  columnNumber: 9\n}, this);\n\nexport default SwapTokens;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapTokens\");","map":{"version":3,"sources":["D:/Github/starway_dapp/msdia80.dll/src/views/swaptokens/index.js"],"names":["useWeb3React","React","useCallback","useEffect","useState","PunkCard","Loading","RequestAccess","useMounajiTestSwap","useMounajiTestContract","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Stack","Flex","Heading","Text","Button","Image","Badge","useToast","Link","SwapTokens","active","account","isBuying","setIsBuying","mounajiTestSwap","mounajiTestContract","totalSupply","setTotalSupply","getBalance","setBalance","inputValue","setInputValue","handleChange","console","log","toast","getMounajiTestContractData","methods","call","balanceOf","buy","buyTokens","send","from","value","on","txHash","tittle","description","status","error","message","base","md","content","width","height","position","bottom","left","bg","zIndex","sm","lg"],"mappings":"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","sourcesContent":["import { useWeb3React } from '@web3-react/core';\r\nimport React from 'react';\r\nimport { useCallback, useEffect, useState } from \"react\"; \r\nimport PunkCard from '../../components/punk-card';\r\nimport Loading from '../../components/loading';\r\nimport RequestAccess from '../../components/request-access';\r\nimport useMounajiTestSwap from '../../hooks/useMounajiTestSwap';\r\nimport useMounajiTestContract from \"../../hooks/useMounajiTestContract\";\r\nimport {\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n    Stack,\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Button,\r\n    Image,\r\n    Badge,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n  import { Link } from \"react-router-dom\";\r\n    \r\n\r\nconst SwapTokens = () => {\r\n\r\n  const { active, account } = useWeb3React();\r\n  const [isBuying, setIsBuying] = useState(false); \r\n    const  mounajiTestSwap  = useMounajiTestSwap();\r\n    const mounajiTestContract = useMounajiTestContract();\r\n    const [totalSupply, setTotalSupply] = useState();\r\n    const [getBalance, setBalance] = useState();\r\n    const [inputValue, setInputValue] = React.useState();\r\n\r\n    const handleChange = (inputValue) => setInputValue(inputValue)\r\nconsole.log (inputValue)\r\n    \r\n    \r\n    // state = {tokenAmount};\r\n\r\n    // const updateTokenAmount = (event) =>{\r\n      \r\n\r\n    //   setInputValue( event.target.value);\r\n        \r\n    // };\r\n     \r\n\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    \r\n    const toast = useToast();\r\n    \r\n    \r\n\r\n    const getMounajiTestContractData = useCallback(async () => {\r\n        if (mounajiTestContract) {\r\n          const totalSupply = await mounajiTestContract.methods.totalSupply().call();\r\n          setTotalSupply(totalSupply/ 1e18);\r\n\r\n          const getBalance = await mounajiTestContract.methods.balanceOf(account).call();\r\n          setBalance(getBalance/ 1e18);\r\n          \r\n        }\r\n      }, [mounajiTestContract, account]);\r\n\r\n      \r\n      useEffect(() => {\r\n        getMounajiTestContractData();\r\n      }, [getMounajiTestContractData]);\r\n\r\n\r\n      const buy = () => {\r\n        setIsBuying(true);\r\n              \r\n          mounajiTestSwap.methods\r\n          .buyTokens()\r\n          .send({\r\n            from: account,\r\n            value: (inputValue * 1e18 ) / 100,\r\n\r\n          })\r\n          .on('transactionHash', (txHash) => {\r\n            toast({\r\n              tittle:'Transaccion enviada',\r\n              description: txHash,\r\n              status: 'info'\r\n            })\r\n            \r\n          })\r\n          .on('receipt', () => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Purchase succefull !',\r\n              description: 'Enjoy playing Starway!',\r\n              status: 'success'\r\n            })\r\n             \r\n\r\n          })\r\n          .on('error', (error) => {\r\n            setIsBuying(false);\r\n            toast({\r\n              tittle:'Ops, Transaccion failed',\r\n              description: error.message,\r\n              status: 'error'\r\n            })\r\n\r\n          })\r\n\r\n        //  inputValue(setInputValue);\r\n\r\n    };\r\n\r\n    // console.log( JSON.stringify(mounajiTestSwap) )\r\n       \r\n    if (!active) return <RequestAccess />;\r\n    \r\n    return (\r\n        \r\n            <Stack\r\n              align={\"center\"}\r\n              spacing={{ base: 8, md: 10 }}\r\n              py={{ base: 20, md: 10 }}\r\n              \r\n            >\r\n<Text\r\n                    as={\"span\"}\r\n                    position={\"relative\"}\r\n                     fontSize={'32px'}\r\n                    _after={{\r\n                      content: \"''\",\r\n                      width: \"full\",\r\n                      height: \"30%\",\r\n                      position: \"absolute\",\r\n                      bottom: 1,\r\n                      left: 0,\r\n                      bg: \"green.400\",\r\n                      zIndex: -1,\r\n                    }}\r\n                  >\r\n                    Token Exchange\r\n                  </Text>\r\n                 \r\n\r\n              <Stack flex={1} spacing={{ base: 10, md: 10 }}>\r\n                <Heading\r\n                  lineHeight={1.1}\r\n                  fontWeight={600}\r\n                  fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n                >\r\n                  \r\n                  <Text as={\"span\"} color={\"blue.400\"}>\r\n                    Get your Star Tokens !\r\n                  </Text>\r\n                  <Text color={\"gray.500\"} alignSelf={'center'} >\r\n            Star token is a cryto-currency that is used for participate in Rank modes on Starway \r\n  \r\n          </Text>\r\n                </Heading>\r\n                <Text color={\"gray.500\"}>\r\n                  Total Supply of Start Tokens: {totalSupply} \r\n                </Text>\r\n                <Text color={\"gray.500\"}>\r\n                  Stars Tokens you own : {getBalance} \r\n                </Text>\r\n                <Text color={\"green.900\"}>\r\n                  Get your Stars and start ean for playing now !\r\n                </Text>\r\n                <Stack\r\n                  spacing={{ base: 4, sm: 6 }}\r\n                  direction={{ base: \"column\", sm: \"row\" }}\r\n                >\r\n                          <NumberInput value={inputValue} type='number' allowMouseWheel defaultValue={0} min={0}\r\n                          onChange= {handleChange}\r\n                          \r\n                           >\r\n      <NumberInputField />\r\n     \r\n    </NumberInput>\r\n                  <Button\r\n                    rounded={\"full\"}\r\n                    size={\"lg\"}\r\n                    fontWeight={\"normal\"}\r\n                    px={20}\r\n                    colorScheme={\"green\"}\r\n                    bg={\"green.400\"}\r\n                    _hover={{ bg: \"green.500\" }}\r\n                    disabled={!mounajiTestContract}\r\n                    onClick={buy}\r\n                    isLoading= {isBuying}\r\n\r\n                  >\r\n                    Buy Stars Tokens\r\n                  </Button>\r\n                 \r\n          \r\n                  <Link to=\"/swaptokens\">\r\n                    <Button rounded={\"full\"} size={\"lg\"} fontWeight={\"normal\"} px={6}>\r\n                      SwapTokens\r\n                    </Button>\r\n                  </Link>\r\n                </Stack>\r\n              </Stack>\r\n              <Flex\r\n                flex={1}\r\n                direction=\"column\"\r\n                justify={\"center\"}\r\n                align={\"center\"}\r\n                position={\"relative\"}\r\n                w={\"full\"}\r\n              >\r\n                \r\n                {active ? (\r\n                  <>\r\n                    <Flex mt={2}>\r\n                      <Badge>\r\n                        Next ID:\r\n                        <Badge ml={1} colorScheme=\"green\">\r\n                          1\r\n                        </Badge>\r\n                      </Badge>\r\n                    \r\n                       \r\n                     \r\n                    </Flex>\r\n                    <Button\r\n                      onClick={getMounajiTestContractData}\r\n                      mt={4}\r\n                      size=\"xs\"\r\n                      colorScheme=\"green\"\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Badge mt={2}>Wallet desconectado</Badge>\r\n                )}\r\n              </Flex>\r\n            </Stack>\r\n          );\r\n        };\r\n        \r\n        \r\n        \r\n        <p>Get your Start Tokens !</p>\r\n        \r\n        \r\n    \r\n\r\n\r\nexport default SwapTokens;"]},"metadata":{},"sourceType":"module"}